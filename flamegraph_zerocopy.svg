<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="325.00"> </text><svg id="frames" x="10" width="1180" total_samples="3200"><g><title>dyld`start (1 samples, 0.03%)</title><rect x="0.0000%" y="277" width="0.0312%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>redirs`main (1 samples, 0.03%)</title><rect x="0.0000%" y="261" width="0.0312%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50"></text></g><g><title>redirs`std::rt::lang_start_internal (1 samples, 0.03%)</title><rect x="0.0000%" y="245" width="0.0312%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>redirs`std::rt::lang_start::_{{closure}} (1 samples, 0.03%)</title><rect x="0.0000%" y="229" width="0.0312%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="239.50"></text></g><g><title>redirs`std::sys::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="0.0000%" y="213" width="0.0312%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>redirs`redirs::main (1 samples, 0.03%)</title><rect x="0.0000%" y="197" width="0.0312%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="207.50"></text></g><g><title>redirs`dashmap::DashMap&lt;K,V&gt;::new (1 samples, 0.03%)</title><rect x="0.0000%" y="181" width="0.0312%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="191.50"></text></g><g><title>redirs`std::sys::random::hashmap_random_keys (1 samples, 0.03%)</title><rect x="0.0000%" y="165" width="0.0312%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="175.50"></text></g><g><title>libcommonCrypto.dylib`0x7ff8265710e8 (1 samples, 0.03%)</title><rect x="0.0000%" y="149" width="0.0312%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (1 samples, 0.03%)</title><rect x="0.0312%" y="277" width="0.0312%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.2812%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.03%)</title><rect x="0.0625%" y="277" width="0.0312%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.3125%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (1 samples, 0.03%)</title><rect x="0.1250%" y="245" width="0.0312%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="1"/><text x="0.3750%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (1 samples, 0.03%)</title><rect x="0.1562%" y="197" width="0.0312%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="1"/><text x="0.4062%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912892e (2 samples, 0.06%)</title><rect x="0.1875%" y="197" width="0.0625%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="2"/><text x="0.4375%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500dc (1 samples, 0.03%)</title><rect x="0.2500%" y="197" width="0.0312%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="1"/><text x="0.5000%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500e1 (2 samples, 0.06%)</title><rect x="0.2812%" y="197" width="0.0625%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="2"/><text x="0.5312%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500ed (1 samples, 0.03%)</title><rect x="0.3438%" y="197" width="0.0312%" height="15" fill="rgb(225,20,46)" fg:x="11" fg:w="1"/><text x="0.5938%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500f7 (1 samples, 0.03%)</title><rect x="0.3750%" y="197" width="0.0312%" height="15" fill="rgb(210,31,41)" fg:x="12" fg:w="1"/><text x="0.6250%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150101 (1 samples, 0.03%)</title><rect x="0.4062%" y="197" width="0.0312%" height="15" fill="rgb(221,200,47)" fg:x="13" fg:w="1"/><text x="0.6562%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150105 (1 samples, 0.03%)</title><rect x="0.4375%" y="197" width="0.0312%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="1"/><text x="0.6875%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81915011e (1 samples, 0.03%)</title><rect x="0.4688%" y="197" width="0.0312%" height="15" fill="rgb(249,33,26)" fg:x="15" fg:w="1"/><text x="0.7188%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150123 (1 samples, 0.03%)</title><rect x="0.5000%" y="197" width="0.0312%" height="15" fill="rgb(235,183,28)" fg:x="16" fg:w="1"/><text x="0.7500%" y="207.50"></text></g><g><title>redirs`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.03%)</title><rect x="0.5312%" y="197" width="0.0312%" height="15" fill="rgb(221,5,38)" fg:x="17" fg:w="1"/><text x="0.7812%" y="207.50"></text></g><g><title>redirs`DYLD-STUB$$memcpy (2 samples, 0.06%)</title><rect x="0.5625%" y="197" width="0.0625%" height="15" fill="rgb(247,18,42)" fg:x="18" fg:w="2"/><text x="0.8125%" y="207.50"></text></g><g><title>redirs`__rdl_dealloc (4 samples, 0.12%)</title><rect x="0.6250%" y="197" width="0.1250%" height="15" fill="rgb(241,131,45)" fg:x="20" fg:w="4"/><text x="0.8750%" y="207.50"></text></g><g><title>redirs`core::ptr::drop_in_place&lt;redirs::message::message::Message&gt; (1 samples, 0.03%)</title><rect x="0.7500%" y="197" width="0.0312%" height="15" fill="rgb(249,31,29)" fg:x="24" fg:w="1"/><text x="1.0000%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1,402 samples, 43.81%)</title><rect x="1.3750%" y="181" width="43.8125%" height="15" fill="rgb(225,111,53)" fg:x="44" fg:w="1402"/><text x="1.6250%" y="191.50">libsystem_kernel.dylib`__recvfrom</text></g><g><title>libsystem_malloc.dylib`0x7ff819125170 (2 samples, 0.06%)</title><rect x="45.1875%" y="181" width="0.0625%" height="15" fill="rgb(238,160,17)" fg:x="1446" fg:w="2"/><text x="45.4375%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912517a (1 samples, 0.03%)</title><rect x="45.2500%" y="181" width="0.0312%" height="15" fill="rgb(214,148,48)" fg:x="1448" fg:w="1"/><text x="45.5000%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251c7 (1 samples, 0.03%)</title><rect x="45.2812%" y="181" width="0.0312%" height="15" fill="rgb(232,36,49)" fg:x="1449" fg:w="1"/><text x="45.5312%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251e2 (1 samples, 0.03%)</title><rect x="45.3125%" y="181" width="0.0312%" height="15" fill="rgb(209,103,24)" fg:x="1450" fg:w="1"/><text x="45.5625%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251fd (2 samples, 0.06%)</title><rect x="45.3438%" y="181" width="0.0625%" height="15" fill="rgb(229,88,8)" fg:x="1451" fg:w="2"/><text x="45.5938%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (2 samples, 0.06%)</title><rect x="45.4062%" y="181" width="0.0625%" height="15" fill="rgb(213,181,19)" fg:x="1453" fg:w="2"/><text x="45.6562%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (1 samples, 0.03%)</title><rect x="45.4688%" y="181" width="0.0312%" height="15" fill="rgb(254,191,54)" fg:x="1455" fg:w="1"/><text x="45.7188%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (1 samples, 0.03%)</title><rect x="45.5000%" y="181" width="0.0312%" height="15" fill="rgb(241,83,37)" fg:x="1456" fg:w="1"/><text x="45.7500%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125289 (1 samples, 0.03%)</title><rect x="45.5312%" y="181" width="0.0312%" height="15" fill="rgb(233,36,39)" fg:x="1457" fg:w="1"/><text x="45.7812%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (3 samples, 0.09%)</title><rect x="45.5625%" y="181" width="0.0938%" height="15" fill="rgb(226,3,54)" fg:x="1458" fg:w="3"/><text x="45.8125%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912536f (1 samples, 0.03%)</title><rect x="45.6562%" y="181" width="0.0312%" height="15" fill="rgb(245,192,40)" fg:x="1461" fg:w="1"/><text x="45.9062%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253df (1 samples, 0.03%)</title><rect x="45.6875%" y="181" width="0.0312%" height="15" fill="rgb(238,167,29)" fg:x="1462" fg:w="1"/><text x="45.9375%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (3 samples, 0.09%)</title><rect x="45.7188%" y="181" width="0.0938%" height="15" fill="rgb(232,182,51)" fg:x="1463" fg:w="3"/><text x="45.9688%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819126246 (1 samples, 0.03%)</title><rect x="45.8125%" y="181" width="0.0312%" height="15" fill="rgb(231,60,39)" fg:x="1466" fg:w="1"/><text x="46.0625%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191263a8 (1 samples, 0.03%)</title><rect x="45.8438%" y="165" width="0.0312%" height="15" fill="rgb(208,69,12)" fg:x="1467" fg:w="1"/><text x="46.0938%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191263ac (3 samples, 0.09%)</title><rect x="45.8750%" y="165" width="0.0938%" height="15" fill="rgb(235,93,37)" fg:x="1468" fg:w="3"/><text x="46.1250%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191263d7 (1 samples, 0.03%)</title><rect x="45.9688%" y="165" width="0.0312%" height="15" fill="rgb(213,116,39)" fg:x="1471" fg:w="1"/><text x="46.2188%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191263f0 (3 samples, 0.09%)</title><rect x="46.0000%" y="165" width="0.0938%" height="15" fill="rgb(222,207,29)" fg:x="1472" fg:w="3"/><text x="46.2500%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81913dfc6 (1 samples, 0.03%)</title><rect x="46.0938%" y="165" width="0.0312%" height="15" fill="rgb(206,96,30)" fg:x="1475" fg:w="1"/><text x="46.3438%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819126254 (10 samples, 0.31%)</title><rect x="45.8438%" y="181" width="0.3125%" height="15" fill="rgb(218,138,4)" fg:x="1467" fg:w="10"/><text x="46.0938%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81913dfd9 (1 samples, 0.03%)</title><rect x="46.1250%" y="165" width="0.0312%" height="15" fill="rgb(250,191,14)" fg:x="1476" fg:w="1"/><text x="46.3750%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191289ae (3 samples, 0.09%)</title><rect x="46.1562%" y="181" width="0.0938%" height="15" fill="rgb(239,60,40)" fg:x="1477" fg:w="3"/><text x="46.4062%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191289d3 (2 samples, 0.06%)</title><rect x="46.2500%" y="181" width="0.0625%" height="15" fill="rgb(206,27,48)" fg:x="1480" fg:w="2"/><text x="46.5000%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128da3 (5 samples, 0.16%)</title><rect x="46.3125%" y="181" width="0.1562%" height="15" fill="rgb(225,35,8)" fg:x="1482" fg:w="5"/><text x="46.5625%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128da5 (3 samples, 0.09%)</title><rect x="46.4688%" y="181" width="0.0938%" height="15" fill="rgb(250,213,24)" fg:x="1487" fg:w="3"/><text x="46.7188%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81913a8d2 (1 samples, 0.03%)</title><rect x="46.5625%" y="181" width="0.0312%" height="15" fill="rgb(247,123,22)" fg:x="1490" fg:w="1"/><text x="46.8125%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81913a8d9 (1 samples, 0.03%)</title><rect x="46.5938%" y="181" width="0.0312%" height="15" fill="rgb(231,138,38)" fg:x="1491" fg:w="1"/><text x="46.8438%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81913a970 (1 samples, 0.03%)</title><rect x="46.6250%" y="181" width="0.0312%" height="15" fill="rgb(231,145,46)" fg:x="1492" fg:w="1"/><text x="46.8750%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466a8 (1 samples, 0.03%)</title><rect x="46.6562%" y="181" width="0.0312%" height="15" fill="rgb(251,118,11)" fg:x="1493" fg:w="1"/><text x="46.9062%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467a7 (1 samples, 0.03%)</title><rect x="46.6875%" y="181" width="0.0312%" height="15" fill="rgb(217,147,25)" fg:x="1494" fg:w="1"/><text x="46.9375%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467cc (1 samples, 0.03%)</title><rect x="46.7188%" y="181" width="0.0312%" height="15" fill="rgb(247,81,37)" fg:x="1495" fg:w="1"/><text x="46.9688%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467de (5 samples, 0.16%)</title><rect x="46.7500%" y="181" width="0.1562%" height="15" fill="rgb(209,12,38)" fg:x="1496" fg:w="5"/><text x="47.0000%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467e6 (1 samples, 0.03%)</title><rect x="46.9062%" y="181" width="0.0312%" height="15" fill="rgb(227,1,9)" fg:x="1501" fg:w="1"/><text x="47.1562%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146822 (1 samples, 0.03%)</title><rect x="46.9375%" y="181" width="0.0312%" height="15" fill="rgb(248,47,43)" fg:x="1502" fg:w="1"/><text x="47.1875%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146843 (4 samples, 0.12%)</title><rect x="46.9688%" y="181" width="0.1250%" height="15" fill="rgb(221,10,30)" fg:x="1503" fg:w="4"/><text x="47.2188%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914685a (2 samples, 0.06%)</title><rect x="47.0938%" y="181" width="0.0625%" height="15" fill="rgb(210,229,1)" fg:x="1507" fg:w="2"/><text x="47.3438%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146876 (2 samples, 0.06%)</title><rect x="47.1562%" y="181" width="0.0625%" height="15" fill="rgb(222,148,37)" fg:x="1509" fg:w="2"/><text x="47.4062%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468aa (2 samples, 0.06%)</title><rect x="47.2188%" y="181" width="0.0625%" height="15" fill="rgb(234,67,33)" fg:x="1511" fg:w="2"/><text x="47.4688%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="47.2500%" y="165" width="0.0312%" height="15" fill="rgb(247,98,35)" fg:x="1512" fg:w="1"/><text x="47.5000%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914694d (1 samples, 0.03%)</title><rect x="47.2812%" y="181" width="0.0312%" height="15" fill="rgb(247,138,52)" fg:x="1513" fg:w="1"/><text x="47.5312%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146962 (1 samples, 0.03%)</title><rect x="47.3125%" y="181" width="0.0312%" height="15" fill="rgb(213,79,30)" fg:x="1514" fg:w="1"/><text x="47.5625%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (12 samples, 0.38%)</title><rect x="47.3438%" y="181" width="0.3750%" height="15" fill="rgb(246,177,23)" fg:x="1515" fg:w="12"/><text x="47.5938%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191469ba (3 samples, 0.09%)</title><rect x="47.7188%" y="181" width="0.0938%" height="15" fill="rgb(230,62,27)" fg:x="1527" fg:w="3"/><text x="47.9688%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f643 (1 samples, 0.03%)</title><rect x="47.8125%" y="181" width="0.0312%" height="15" fill="rgb(216,154,8)" fg:x="1530" fg:w="1"/><text x="48.0625%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f654 (5 samples, 0.16%)</title><rect x="47.8438%" y="181" width="0.1562%" height="15" fill="rgb(244,35,45)" fg:x="1531" fg:w="5"/><text x="48.0938%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f671 (1 samples, 0.03%)</title><rect x="48.0000%" y="181" width="0.0312%" height="15" fill="rgb(251,115,12)" fg:x="1536" fg:w="1"/><text x="48.2500%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f677 (2 samples, 0.06%)</title><rect x="48.0312%" y="181" width="0.0625%" height="15" fill="rgb(240,54,50)" fg:x="1537" fg:w="2"/><text x="48.2812%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (7 samples, 0.22%)</title><rect x="48.0938%" y="181" width="0.2188%" height="15" fill="rgb(233,84,52)" fg:x="1539" fg:w="7"/><text x="48.3438%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.09%)</title><rect x="48.3125%" y="181" width="0.0938%" height="15" fill="rgb(207,117,47)" fg:x="1546" fg:w="3"/><text x="48.5625%" y="191.50"></text></g><g><title>redirs`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (5 samples, 0.16%)</title><rect x="48.4062%" y="181" width="0.1562%" height="15" fill="rgb(249,43,39)" fg:x="1549" fg:w="5"/><text x="48.6562%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146971 (1 samples, 0.03%)</title><rect x="49.0000%" y="165" width="0.0312%" height="15" fill="rgb(209,38,44)" fg:x="1568" fg:w="1"/><text x="49.2500%" y="175.50"></text></g><g><title>redirs`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (17 samples, 0.53%)</title><rect x="48.5625%" y="181" width="0.5312%" height="15" fill="rgb(236,212,23)" fg:x="1554" fg:w="17"/><text x="48.8125%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (2 samples, 0.06%)</title><rect x="49.0312%" y="165" width="0.0625%" height="15" fill="rgb(242,79,21)" fg:x="1569" fg:w="2"/><text x="49.2812%" y="175.50"></text></g><g><title>redirs`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="49.0938%" y="181" width="0.0312%" height="15" fill="rgb(211,96,35)" fg:x="1571" fg:w="1"/><text x="49.3438%" y="191.50"></text></g><g><title>libsystem_c.dylib`0x7ff8191c29c7 (1 samples, 0.03%)</title><rect x="49.3750%" y="149" width="0.0312%" height="15" fill="rgb(253,215,40)" fg:x="1580" fg:w="1"/><text x="49.6250%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (777 samples, 24.28%)</title><rect x="49.4062%" y="149" width="24.2812%" height="15" fill="rgb(211,81,21)" fg:x="1581" fg:w="777"/><text x="49.6562%" y="159.50">libsystem_kernel.dylib`__sendto</text></g><g><title>redirs`&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="73.6875%" y="149" width="0.0625%" height="15" fill="rgb(208,190,38)" fg:x="2358" fg:w="2"/><text x="73.9375%" y="159.50"></text></g><g><title>redirs`&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as core::ops::drop::Drop&gt;::drop (795 samples, 24.84%)</title><rect x="49.1250%" y="181" width="24.8438%" height="15" fill="rgb(235,213,38)" fg:x="1572" fg:w="795"/><text x="49.3750%" y="191.50">redirs`&lt;std::io::buffered::bufwriter::Bu..</text></g><g><title>redirs`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (792 samples, 24.75%)</title><rect x="49.2188%" y="165" width="24.7500%" height="15" fill="rgb(237,122,38)" fg:x="1575" fg:w="792"/><text x="49.4688%" y="175.50">redirs`std::io::buffered::bufwriter::Bu..</text></g><g><title>redirs`std::net::udp::UdpSocket::send (7 samples, 0.22%)</title><rect x="73.7500%" y="149" width="0.2188%" height="15" fill="rgb(244,218,35)" fg:x="2360" fg:w="7"/><text x="74.0000%" y="159.50"></text></g><g><title>libsystem_c.dylib`0x7ff8191c29ca (1 samples, 0.03%)</title><rect x="73.9375%" y="133" width="0.0312%" height="15" fill="rgb(240,68,47)" fg:x="2366" fg:w="1"/><text x="74.1875%" y="143.50"></text></g><g><title>redirs`DYLD-STUB$$malloc (1 samples, 0.03%)</title><rect x="73.9688%" y="181" width="0.0312%" height="15" fill="rgb(210,16,53)" fg:x="2367" fg:w="1"/><text x="74.2188%" y="191.50"></text></g><g><title>redirs`__rust_alloc (1 samples, 0.03%)</title><rect x="74.0000%" y="181" width="0.0312%" height="15" fill="rgb(235,124,12)" fg:x="2368" fg:w="1"/><text x="74.2500%" y="191.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (2 samples, 0.06%)</title><rect x="74.0312%" y="181" width="0.0625%" height="15" fill="rgb(224,169,11)" fg:x="2369" fg:w="2"/><text x="74.2812%" y="191.50"></text></g><g><title>redirs`core::ptr::drop_in_place&lt;redirs::message::message::Message&gt; (2 samples, 0.06%)</title><rect x="74.0938%" y="181" width="0.0625%" height="15" fill="rgb(250,166,2)" fg:x="2371" fg:w="2"/><text x="74.3438%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251fd (3 samples, 0.09%)</title><rect x="74.3125%" y="165" width="0.0938%" height="15" fill="rgb(242,216,29)" fg:x="2378" fg:w="3"/><text x="74.5625%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (3 samples, 0.09%)</title><rect x="74.4062%" y="165" width="0.0938%" height="15" fill="rgb(230,116,27)" fg:x="2381" fg:w="3"/><text x="74.6562%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125233 (1 samples, 0.03%)</title><rect x="74.5000%" y="165" width="0.0312%" height="15" fill="rgb(228,99,48)" fg:x="2384" fg:w="1"/><text x="74.7500%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252a9 (1 samples, 0.03%)</title><rect x="74.5312%" y="165" width="0.0312%" height="15" fill="rgb(253,11,6)" fg:x="2385" fg:w="1"/><text x="74.7812%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252b6 (1 samples, 0.03%)</title><rect x="74.5625%" y="165" width="0.0312%" height="15" fill="rgb(247,143,39)" fg:x="2386" fg:w="1"/><text x="74.8125%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125302 (1 samples, 0.03%)</title><rect x="74.5938%" y="165" width="0.0312%" height="15" fill="rgb(236,97,10)" fg:x="2387" fg:w="1"/><text x="74.8438%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125308 (1 samples, 0.03%)</title><rect x="74.6250%" y="165" width="0.0312%" height="15" fill="rgb(233,208,19)" fg:x="2388" fg:w="1"/><text x="74.8750%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (2 samples, 0.06%)</title><rect x="74.6562%" y="165" width="0.0625%" height="15" fill="rgb(216,164,2)" fg:x="2389" fg:w="2"/><text x="74.9062%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (4 samples, 0.12%)</title><rect x="74.7188%" y="165" width="0.1250%" height="15" fill="rgb(220,129,5)" fg:x="2391" fg:w="4"/><text x="74.9688%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912539b (1 samples, 0.03%)</title><rect x="74.8438%" y="165" width="0.0312%" height="15" fill="rgb(242,17,10)" fg:x="2395" fg:w="1"/><text x="75.0938%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253de (1 samples, 0.03%)</title><rect x="74.8750%" y="165" width="0.0312%" height="15" fill="rgb(242,107,0)" fg:x="2396" fg:w="1"/><text x="75.1250%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (2 samples, 0.06%)</title><rect x="74.9062%" y="165" width="0.0625%" height="15" fill="rgb(251,28,31)" fg:x="2397" fg:w="2"/><text x="75.1562%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466a8 (1 samples, 0.03%)</title><rect x="74.9688%" y="165" width="0.0312%" height="15" fill="rgb(233,223,10)" fg:x="2399" fg:w="1"/><text x="75.2188%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467d0 (1 samples, 0.03%)</title><rect x="75.0000%" y="165" width="0.0312%" height="15" fill="rgb(215,21,27)" fg:x="2400" fg:w="1"/><text x="75.2500%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467de (1 samples, 0.03%)</title><rect x="75.0312%" y="165" width="0.0312%" height="15" fill="rgb(232,23,21)" fg:x="2401" fg:w="1"/><text x="75.2812%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146822 (1 samples, 0.03%)</title><rect x="75.0625%" y="165" width="0.0312%" height="15" fill="rgb(244,5,23)" fg:x="2402" fg:w="1"/><text x="75.3125%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914683e (1 samples, 0.03%)</title><rect x="75.0938%" y="165" width="0.0312%" height="15" fill="rgb(226,81,46)" fg:x="2403" fg:w="1"/><text x="75.3438%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146843 (2 samples, 0.06%)</title><rect x="75.1250%" y="165" width="0.0625%" height="15" fill="rgb(247,70,30)" fg:x="2404" fg:w="2"/><text x="75.3750%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914689d (1 samples, 0.03%)</title><rect x="75.1875%" y="165" width="0.0312%" height="15" fill="rgb(212,68,19)" fg:x="2406" fg:w="1"/><text x="75.4375%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468a1 (1 samples, 0.03%)</title><rect x="75.2188%" y="165" width="0.0312%" height="15" fill="rgb(240,187,13)" fg:x="2407" fg:w="1"/><text x="75.4688%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468aa (3 samples, 0.09%)</title><rect x="75.2500%" y="165" width="0.0938%" height="15" fill="rgb(223,113,26)" fg:x="2408" fg:w="3"/><text x="75.5000%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.09%)</title><rect x="75.2500%" y="149" width="0.0938%" height="15" fill="rgb(206,192,2)" fg:x="2408" fg:w="3"/><text x="75.5000%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146908 (1 samples, 0.03%)</title><rect x="75.3438%" y="165" width="0.0312%" height="15" fill="rgb(241,108,4)" fg:x="2411" fg:w="1"/><text x="75.5938%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (2 samples, 0.06%)</title><rect x="75.3750%" y="165" width="0.0625%" height="15" fill="rgb(247,173,49)" fg:x="2412" fg:w="2"/><text x="75.6250%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146a0f (1 samples, 0.03%)</title><rect x="75.4375%" y="165" width="0.0312%" height="15" fill="rgb(224,114,35)" fg:x="2414" fg:w="1"/><text x="75.6875%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500e1 (1 samples, 0.03%)</title><rect x="75.4688%" y="165" width="0.0312%" height="15" fill="rgb(245,159,27)" fg:x="2415" fg:w="1"/><text x="75.7188%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.09%)</title><rect x="75.5000%" y="165" width="0.0938%" height="15" fill="rgb(245,172,44)" fg:x="2416" fg:w="3"/><text x="75.7500%" y="175.50"></text></g><g><title>redirs`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="75.5938%" y="165" width="0.0312%" height="15" fill="rgb(236,23,11)" fg:x="2419" fg:w="1"/><text x="75.8438%" y="175.50"></text></g><g><title>redirs`DYLD-STUB$$memcpy (1 samples, 0.03%)</title><rect x="75.6250%" y="165" width="0.0312%" height="15" fill="rgb(205,117,38)" fg:x="2420" fg:w="1"/><text x="75.8750%" y="175.50"></text></g><g><title>redirs`__rdl_dealloc (1 samples, 0.03%)</title><rect x="75.6562%" y="165" width="0.0312%" height="15" fill="rgb(237,72,25)" fg:x="2421" fg:w="1"/><text x="75.9062%" y="175.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (20 samples, 0.62%)</title><rect x="75.6875%" y="165" width="0.6250%" height="15" fill="rgb(244,70,9)" fg:x="2422" fg:w="20"/><text x="75.9375%" y="175.50"></text></g><g><title>redirs`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.56%)</title><rect x="75.7500%" y="149" width="0.5625%" height="15" fill="rgb(217,125,39)" fg:x="2424" fg:w="18"/><text x="76.0000%" y="159.50"></text></g><g><title>redirs`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.03%)</title><rect x="76.3125%" y="165" width="0.0312%" height="15" fill="rgb(235,36,10)" fg:x="2442" fg:w="1"/><text x="76.5625%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466a1 (1 samples, 0.03%)</title><rect x="76.4688%" y="149" width="0.0312%" height="15" fill="rgb(251,123,47)" fg:x="2447" fg:w="1"/><text x="76.7188%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466b6 (1 samples, 0.03%)</title><rect x="76.5000%" y="149" width="0.0312%" height="15" fill="rgb(221,13,13)" fg:x="2448" fg:w="1"/><text x="76.7500%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467a7 (1 samples, 0.03%)</title><rect x="76.5312%" y="149" width="0.0312%" height="15" fill="rgb(238,131,9)" fg:x="2449" fg:w="1"/><text x="76.7812%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467b5 (2 samples, 0.06%)</title><rect x="76.5625%" y="149" width="0.0625%" height="15" fill="rgb(211,50,8)" fg:x="2450" fg:w="2"/><text x="76.8125%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467e6 (1 samples, 0.03%)</title><rect x="76.6250%" y="149" width="0.0312%" height="15" fill="rgb(245,182,24)" fg:x="2452" fg:w="1"/><text x="76.8750%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467ee (1 samples, 0.03%)</title><rect x="76.6562%" y="149" width="0.0312%" height="15" fill="rgb(242,14,37)" fg:x="2453" fg:w="1"/><text x="76.9062%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146843 (3 samples, 0.09%)</title><rect x="76.6875%" y="149" width="0.0938%" height="15" fill="rgb(246,228,12)" fg:x="2454" fg:w="3"/><text x="76.9375%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146873 (2 samples, 0.06%)</title><rect x="76.7812%" y="149" width="0.0625%" height="15" fill="rgb(213,55,15)" fg:x="2457" fg:w="2"/><text x="77.0312%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468f4 (1 samples, 0.03%)</title><rect x="76.8438%" y="149" width="0.0312%" height="15" fill="rgb(209,9,3)" fg:x="2459" fg:w="1"/><text x="77.0938%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (6 samples, 0.19%)</title><rect x="76.8750%" y="149" width="0.1875%" height="15" fill="rgb(230,59,30)" fg:x="2460" fg:w="6"/><text x="77.1250%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500f5 (2 samples, 0.06%)</title><rect x="77.0625%" y="149" width="0.0625%" height="15" fill="rgb(209,121,21)" fg:x="2466" fg:w="2"/><text x="77.3125%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500f7 (1 samples, 0.03%)</title><rect x="77.1250%" y="149" width="0.0312%" height="15" fill="rgb(220,109,13)" fg:x="2468" fg:w="1"/><text x="77.3750%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150105 (2 samples, 0.06%)</title><rect x="77.1562%" y="149" width="0.0625%" height="15" fill="rgb(232,18,1)" fg:x="2469" fg:w="2"/><text x="77.4062%" y="159.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="77.2188%" y="149" width="0.0312%" height="15" fill="rgb(215,41,42)" fg:x="2471" fg:w="1"/><text x="77.4688%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="77.2500%" y="149" width="0.0625%" height="15" fill="rgb(224,123,36)" fg:x="2472" fg:w="2"/><text x="77.5000%" y="159.50"></text></g><g><title>redirs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.06%)</title><rect x="77.3125%" y="149" width="0.0625%" height="15" fill="rgb(240,125,3)" fg:x="2474" fg:w="2"/><text x="77.5625%" y="159.50"></text></g><g><title>redirs`DYLD-STUB$$memcpy (4 samples, 0.12%)</title><rect x="77.3750%" y="149" width="0.1250%" height="15" fill="rgb(205,98,50)" fg:x="2476" fg:w="4"/><text x="77.6250%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125170 (1 samples, 0.03%)</title><rect x="77.5938%" y="133" width="0.0312%" height="15" fill="rgb(205,185,37)" fg:x="2483" fg:w="1"/><text x="77.8438%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251ae (1 samples, 0.03%)</title><rect x="77.6250%" y="133" width="0.0312%" height="15" fill="rgb(238,207,15)" fg:x="2484" fg:w="1"/><text x="77.8750%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f64c (1 samples, 0.03%)</title><rect x="77.6562%" y="133" width="0.0312%" height="15" fill="rgb(213,199,42)" fg:x="2485" fg:w="1"/><text x="77.9062%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f677 (1 samples, 0.03%)</title><rect x="77.6875%" y="133" width="0.0312%" height="15" fill="rgb(235,201,11)" fg:x="2486" fg:w="1"/><text x="77.9375%" y="143.50"></text></g><g><title>redirs`__rdl_alloc (2 samples, 0.06%)</title><rect x="77.7188%" y="133" width="0.0625%" height="15" fill="rgb(207,46,11)" fg:x="2487" fg:w="2"/><text x="77.9688%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251fd (2 samples, 0.06%)</title><rect x="77.8438%" y="117" width="0.0625%" height="15" fill="rgb(241,35,35)" fg:x="2491" fg:w="2"/><text x="78.0938%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (3 samples, 0.09%)</title><rect x="77.9062%" y="117" width="0.0938%" height="15" fill="rgb(243,32,47)" fg:x="2493" fg:w="3"/><text x="78.1562%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912520b (2 samples, 0.06%)</title><rect x="78.0000%" y="117" width="0.0625%" height="15" fill="rgb(247,202,23)" fg:x="2496" fg:w="2"/><text x="78.2500%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125219 (1 samples, 0.03%)</title><rect x="78.0625%" y="117" width="0.0312%" height="15" fill="rgb(219,102,11)" fg:x="2498" fg:w="1"/><text x="78.3125%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (1 samples, 0.03%)</title><rect x="78.0938%" y="117" width="0.0312%" height="15" fill="rgb(243,110,44)" fg:x="2499" fg:w="1"/><text x="78.3438%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (3 samples, 0.09%)</title><rect x="78.1250%" y="117" width="0.0938%" height="15" fill="rgb(222,74,54)" fg:x="2500" fg:w="3"/><text x="78.3750%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523d (1 samples, 0.03%)</title><rect x="78.2188%" y="117" width="0.0312%" height="15" fill="rgb(216,99,12)" fg:x="2503" fg:w="1"/><text x="78.4688%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125289 (1 samples, 0.03%)</title><rect x="78.2500%" y="117" width="0.0312%" height="15" fill="rgb(226,22,26)" fg:x="2504" fg:w="1"/><text x="78.5000%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252b6 (1 samples, 0.03%)</title><rect x="78.2812%" y="117" width="0.0312%" height="15" fill="rgb(217,163,10)" fg:x="2505" fg:w="1"/><text x="78.5312%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252e9 (1 samples, 0.03%)</title><rect x="78.3125%" y="117" width="0.0312%" height="15" fill="rgb(213,25,53)" fg:x="2506" fg:w="1"/><text x="78.5625%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252ee (1 samples, 0.03%)</title><rect x="78.3438%" y="117" width="0.0312%" height="15" fill="rgb(252,105,26)" fg:x="2507" fg:w="1"/><text x="78.5938%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (4 samples, 0.12%)</title><rect x="78.3750%" y="117" width="0.1250%" height="15" fill="rgb(220,39,43)" fg:x="2508" fg:w="4"/><text x="78.6250%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912531a (1 samples, 0.03%)</title><rect x="78.5000%" y="117" width="0.0312%" height="15" fill="rgb(229,68,48)" fg:x="2512" fg:w="1"/><text x="78.7500%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (4 samples, 0.12%)</title><rect x="78.5312%" y="117" width="0.1250%" height="15" fill="rgb(252,8,32)" fg:x="2513" fg:w="4"/><text x="78.7812%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125389 (1 samples, 0.03%)</title><rect x="78.6562%" y="117" width="0.0312%" height="15" fill="rgb(223,20,43)" fg:x="2517" fg:w="1"/><text x="78.9062%" y="127.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (39 samples, 1.22%)</title><rect x="77.5000%" y="149" width="1.2188%" height="15" fill="rgb(229,81,49)" fg:x="2480" fg:w="39"/><text x="77.7500%" y="159.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (30 samples, 0.94%)</title><rect x="77.7812%" y="133" width="0.9375%" height="15" fill="rgb(236,28,36)" fg:x="2489" fg:w="30"/><text x="78.0312%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (1 samples, 0.03%)</title><rect x="78.6875%" y="117" width="0.0312%" height="15" fill="rgb(249,185,26)" fg:x="2518" fg:w="1"/><text x="78.9375%" y="127.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (3 samples, 0.09%)</title><rect x="78.7188%" y="149" width="0.0938%" height="15" fill="rgb(249,174,33)" fg:x="2519" fg:w="3"/><text x="78.9688%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="79.0000%" y="117" width="0.0312%" height="15" fill="rgb(233,201,37)" fg:x="2528" fg:w="1"/><text x="79.2500%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253df (1 samples, 0.03%)</title><rect x="79.0938%" y="101" width="0.0312%" height="15" fill="rgb(221,78,26)" fg:x="2531" fg:w="1"/><text x="79.3438%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f656 (1 samples, 0.03%)</title><rect x="79.1250%" y="101" width="0.0312%" height="15" fill="rgb(250,127,30)" fg:x="2532" fg:w="1"/><text x="79.3750%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f679 (1 samples, 0.03%)</title><rect x="79.1562%" y="101" width="0.0312%" height="15" fill="rgb(230,49,44)" fg:x="2533" fg:w="1"/><text x="79.4062%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f68d (1 samples, 0.03%)</title><rect x="79.1875%" y="101" width="0.0312%" height="15" fill="rgb(229,67,23)" fg:x="2534" fg:w="1"/><text x="79.4375%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (3 samples, 0.09%)</title><rect x="79.2188%" y="85" width="0.0938%" height="15" fill="rgb(249,83,47)" fg:x="2535" fg:w="3"/><text x="79.4688%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125219 (1 samples, 0.03%)</title><rect x="79.3125%" y="85" width="0.0312%" height="15" fill="rgb(215,43,3)" fg:x="2538" fg:w="1"/><text x="79.5625%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252a9 (1 samples, 0.03%)</title><rect x="79.3438%" y="85" width="0.0312%" height="15" fill="rgb(238,154,13)" fg:x="2539" fg:w="1"/><text x="79.5938%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252c7 (1 samples, 0.03%)</title><rect x="79.3750%" y="85" width="0.0312%" height="15" fill="rgb(219,56,2)" fg:x="2540" fg:w="1"/><text x="79.6250%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252d3 (1 samples, 0.03%)</title><rect x="79.4062%" y="85" width="0.0312%" height="15" fill="rgb(233,0,4)" fg:x="2541" fg:w="1"/><text x="79.6562%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (3 samples, 0.09%)</title><rect x="79.4375%" y="85" width="0.0938%" height="15" fill="rgb(235,30,7)" fg:x="2542" fg:w="3"/><text x="79.6875%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912531a (1 samples, 0.03%)</title><rect x="79.5312%" y="85" width="0.0312%" height="15" fill="rgb(250,79,13)" fg:x="2545" fg:w="1"/><text x="79.7812%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125321 (1 samples, 0.03%)</title><rect x="79.5625%" y="85" width="0.0312%" height="15" fill="rgb(211,146,34)" fg:x="2546" fg:w="1"/><text x="79.8125%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532a (1 samples, 0.03%)</title><rect x="79.5938%" y="85" width="0.0312%" height="15" fill="rgb(228,22,38)" fg:x="2547" fg:w="1"/><text x="79.8438%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (5 samples, 0.16%)</title><rect x="79.6250%" y="85" width="0.1562%" height="15" fill="rgb(235,168,5)" fg:x="2548" fg:w="5"/><text x="79.8750%" y="95.50"></text></g><g><title>redirs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (28 samples, 0.88%)</title><rect x="78.9375%" y="133" width="0.8750%" height="15" fill="rgb(221,155,16)" fg:x="2526" fg:w="28"/><text x="79.1875%" y="143.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (25 samples, 0.78%)</title><rect x="79.0312%" y="117" width="0.7812%" height="15" fill="rgb(215,215,53)" fg:x="2529" fg:w="25"/><text x="79.2812%" y="127.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (19 samples, 0.59%)</title><rect x="79.2188%" y="101" width="0.5938%" height="15" fill="rgb(223,4,10)" fg:x="2535" fg:w="19"/><text x="79.4688%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253ce (1 samples, 0.03%)</title><rect x="79.7812%" y="85" width="0.0312%" height="15" fill="rgb(234,103,6)" fg:x="2553" fg:w="1"/><text x="80.0312%" y="95.50"></text></g><g><title>redirs`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (33 samples, 1.03%)</title><rect x="78.8125%" y="149" width="1.0312%" height="15" fill="rgb(227,97,0)" fg:x="2522" fg:w="33"/><text x="79.0625%" y="159.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="79.8125%" y="133" width="0.0312%" height="15" fill="rgb(234,150,53)" fg:x="2554" fg:w="1"/><text x="80.0625%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466a6 (1 samples, 0.03%)</title><rect x="80.4688%" y="133" width="0.0312%" height="15" fill="rgb(228,201,54)" fg:x="2575" fg:w="1"/><text x="80.7188%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466ff (1 samples, 0.03%)</title><rect x="80.5000%" y="133" width="0.0312%" height="15" fill="rgb(222,22,37)" fg:x="2576" fg:w="1"/><text x="80.7500%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467a7 (1 samples, 0.03%)</title><rect x="80.5312%" y="133" width="0.0312%" height="15" fill="rgb(237,53,32)" fg:x="2577" fg:w="1"/><text x="80.7812%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467de (2 samples, 0.06%)</title><rect x="80.5625%" y="133" width="0.0625%" height="15" fill="rgb(233,25,53)" fg:x="2578" fg:w="2"/><text x="80.8125%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467e6 (1 samples, 0.03%)</title><rect x="80.6250%" y="133" width="0.0312%" height="15" fill="rgb(210,40,34)" fg:x="2580" fg:w="1"/><text x="80.8750%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146843 (5 samples, 0.16%)</title><rect x="80.6562%" y="133" width="0.1562%" height="15" fill="rgb(241,220,44)" fg:x="2581" fg:w="5"/><text x="80.9062%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146873 (2 samples, 0.06%)</title><rect x="80.8125%" y="133" width="0.0625%" height="15" fill="rgb(235,28,35)" fg:x="2586" fg:w="2"/><text x="81.0625%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146895 (1 samples, 0.03%)</title><rect x="80.8750%" y="133" width="0.0312%" height="15" fill="rgb(210,56,17)" fg:x="2588" fg:w="1"/><text x="81.1250%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146897 (1 samples, 0.03%)</title><rect x="80.9062%" y="133" width="0.0312%" height="15" fill="rgb(224,130,29)" fg:x="2589" fg:w="1"/><text x="81.1562%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468b5 (1 samples, 0.03%)</title><rect x="80.9375%" y="133" width="0.0312%" height="15" fill="rgb(235,212,8)" fg:x="2590" fg:w="1"/><text x="81.1875%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468f4 (1 samples, 0.03%)</title><rect x="80.9688%" y="133" width="0.0312%" height="15" fill="rgb(223,33,50)" fg:x="2591" fg:w="1"/><text x="81.2188%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (9 samples, 0.28%)</title><rect x="81.0000%" y="133" width="0.2812%" height="15" fill="rgb(219,149,13)" fg:x="2592" fg:w="9"/><text x="81.2500%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191469ba (1 samples, 0.03%)</title><rect x="81.2812%" y="133" width="0.0312%" height="15" fill="rgb(250,156,29)" fg:x="2601" fg:w="1"/><text x="81.5312%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146a0f (2 samples, 0.06%)</title><rect x="81.3125%" y="133" width="0.0625%" height="15" fill="rgb(216,193,19)" fg:x="2602" fg:w="2"/><text x="81.5625%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.16%)</title><rect x="81.3750%" y="133" width="0.1562%" height="15" fill="rgb(216,135,14)" fg:x="2604" fg:w="5"/><text x="81.6250%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819126e9d (4 samples, 0.12%)</title><rect x="81.7812%" y="117" width="0.1250%" height="15" fill="rgb(241,47,5)" fg:x="2617" fg:w="4"/><text x="82.0312%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150131 (4 samples, 0.12%)</title><rect x="81.9062%" y="117" width="0.1250%" height="15" fill="rgb(233,42,35)" fg:x="2621" fg:w="4"/><text x="82.1562%" y="127.50"></text></g><g><title>redirs`DYLD-STUB$$realloc (1 samples, 0.03%)</title><rect x="82.0312%" y="117" width="0.0312%" height="15" fill="rgb(231,13,6)" fg:x="2625" fg:w="1"/><text x="82.2812%" y="127.50"></text></g><g><title>redirs`__rdl_realloc (3 samples, 0.09%)</title><rect x="82.0625%" y="117" width="0.0938%" height="15" fill="rgb(207,181,40)" fg:x="2626" fg:w="3"/><text x="82.3125%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125c37 (1 samples, 0.03%)</title><rect x="82.4688%" y="101" width="0.0312%" height="15" fill="rgb(254,173,49)" fg:x="2639" fg:w="1"/><text x="82.7188%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125c78 (1 samples, 0.03%)</title><rect x="82.5000%" y="101" width="0.0312%" height="15" fill="rgb(221,1,38)" fg:x="2640" fg:w="1"/><text x="82.7500%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125d1d (1 samples, 0.03%)</title><rect x="82.5312%" y="101" width="0.0312%" height="15" fill="rgb(206,124,46)" fg:x="2641" fg:w="1"/><text x="82.7812%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125d2d (1 samples, 0.03%)</title><rect x="82.5625%" y="101" width="0.0312%" height="15" fill="rgb(249,21,11)" fg:x="2642" fg:w="1"/><text x="82.8125%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125d91 (1 samples, 0.03%)</title><rect x="82.5938%" y="101" width="0.0312%" height="15" fill="rgb(222,201,40)" fg:x="2643" fg:w="1"/><text x="82.8438%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125db2 (4 samples, 0.12%)</title><rect x="82.6250%" y="101" width="0.1250%" height="15" fill="rgb(235,61,29)" fg:x="2644" fg:w="4"/><text x="82.8750%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125dc5 (3 samples, 0.09%)</title><rect x="82.7500%" y="101" width="0.0938%" height="15" fill="rgb(219,207,3)" fg:x="2648" fg:w="3"/><text x="83.0000%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb37 (1 samples, 0.03%)</title><rect x="82.8438%" y="101" width="0.0312%" height="15" fill="rgb(222,56,46)" fg:x="2651" fg:w="1"/><text x="83.0938%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150136 (1 samples, 0.03%)</title><rect x="82.8750%" y="101" width="0.0312%" height="15" fill="rgb(239,76,54)" fg:x="2652" fg:w="1"/><text x="83.1250%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150138 (1 samples, 0.03%)</title><rect x="82.9062%" y="101" width="0.0312%" height="15" fill="rgb(231,124,27)" fg:x="2653" fg:w="1"/><text x="83.1562%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81915013a (1 samples, 0.03%)</title><rect x="82.9375%" y="101" width="0.0312%" height="15" fill="rgb(249,195,6)" fg:x="2654" fg:w="1"/><text x="83.1875%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150146 (1 samples, 0.03%)</title><rect x="82.9688%" y="101" width="0.0312%" height="15" fill="rgb(237,174,47)" fg:x="2655" fg:w="1"/><text x="83.2188%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150155 (2 samples, 0.06%)</title><rect x="83.0000%" y="101" width="0.0625%" height="15" fill="rgb(206,201,31)" fg:x="2656" fg:w="2"/><text x="83.2500%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81915015b (2 samples, 0.06%)</title><rect x="83.0625%" y="101" width="0.0625%" height="15" fill="rgb(231,57,52)" fg:x="2658" fg:w="2"/><text x="83.3125%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191501c9 (1 samples, 0.03%)</title><rect x="83.1250%" y="101" width="0.0312%" height="15" fill="rgb(248,177,22)" fg:x="2660" fg:w="1"/><text x="83.3750%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191501e0 (1 samples, 0.03%)</title><rect x="83.1562%" y="101" width="0.0312%" height="15" fill="rgb(215,211,37)" fg:x="2661" fg:w="1"/><text x="83.4062%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81915024e (1 samples, 0.03%)</title><rect x="83.1875%" y="101" width="0.0312%" height="15" fill="rgb(241,128,51)" fg:x="2662" fg:w="1"/><text x="83.4375%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150263 (1 samples, 0.03%)</title><rect x="83.2188%" y="101" width="0.0312%" height="15" fill="rgb(227,165,31)" fg:x="2663" fg:w="1"/><text x="83.4688%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128352 (2 samples, 0.06%)</title><rect x="83.2500%" y="85" width="0.0625%" height="15" fill="rgb(228,167,24)" fg:x="2664" fg:w="2"/><text x="83.5000%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128359 (1 samples, 0.03%)</title><rect x="83.3125%" y="85" width="0.0312%" height="15" fill="rgb(228,143,12)" fg:x="2666" fg:w="1"/><text x="83.5625%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb3d (1 samples, 0.03%)</title><rect x="83.3438%" y="85" width="0.0312%" height="15" fill="rgb(249,149,8)" fg:x="2667" fg:w="1"/><text x="83.5938%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb44 (1 samples, 0.03%)</title><rect x="83.3750%" y="85" width="0.0312%" height="15" fill="rgb(243,35,44)" fg:x="2668" fg:w="1"/><text x="83.6250%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb57 (3 samples, 0.09%)</title><rect x="83.4062%" y="85" width="0.0938%" height="15" fill="rgb(246,89,9)" fg:x="2669" fg:w="3"/><text x="83.6562%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb5a (1 samples, 0.03%)</title><rect x="83.5000%" y="85" width="0.0312%" height="15" fill="rgb(233,213,13)" fg:x="2672" fg:w="1"/><text x="83.7500%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb68 (2 samples, 0.06%)</title><rect x="83.5312%" y="85" width="0.0625%" height="15" fill="rgb(233,141,41)" fg:x="2673" fg:w="2"/><text x="83.7812%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125e0a (1 samples, 0.03%)</title><rect x="83.5938%" y="69" width="0.0312%" height="15" fill="rgb(239,167,4)" fg:x="2675" fg:w="1"/><text x="83.8438%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125eb6 (1 samples, 0.03%)</title><rect x="83.6250%" y="69" width="0.0312%" height="15" fill="rgb(209,217,16)" fg:x="2676" fg:w="1"/><text x="83.8750%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125ed8 (1 samples, 0.03%)</title><rect x="83.6562%" y="69" width="0.0312%" height="15" fill="rgb(219,88,35)" fg:x="2677" fg:w="1"/><text x="83.9062%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125efe (2 samples, 0.06%)</title><rect x="83.6875%" y="69" width="0.0625%" height="15" fill="rgb(220,193,23)" fg:x="2678" fg:w="2"/><text x="83.9375%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125f0a (1 samples, 0.03%)</title><rect x="83.7500%" y="69" width="0.0312%" height="15" fill="rgb(230,90,52)" fg:x="2680" fg:w="1"/><text x="84.0000%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125f6b (1 samples, 0.03%)</title><rect x="83.7812%" y="69" width="0.0312%" height="15" fill="rgb(252,106,19)" fg:x="2681" fg:w="1"/><text x="84.0312%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125f80 (6 samples, 0.19%)</title><rect x="83.8125%" y="69" width="0.1875%" height="15" fill="rgb(206,74,20)" fg:x="2682" fg:w="6"/><text x="84.0625%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125f89 (4 samples, 0.12%)</title><rect x="84.0000%" y="69" width="0.1250%" height="15" fill="rgb(230,138,44)" fg:x="2688" fg:w="4"/><text x="84.2500%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125f9c (1 samples, 0.03%)</title><rect x="84.1250%" y="69" width="0.0312%" height="15" fill="rgb(235,182,43)" fg:x="2692" fg:w="1"/><text x="84.3750%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128386 (1 samples, 0.03%)</title><rect x="84.1562%" y="69" width="0.0312%" height="15" fill="rgb(242,16,51)" fg:x="2693" fg:w="1"/><text x="84.4062%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128394 (1 samples, 0.03%)</title><rect x="84.1875%" y="69" width="0.0312%" height="15" fill="rgb(248,9,4)" fg:x="2694" fg:w="1"/><text x="84.4375%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128405 (1 samples, 0.03%)</title><rect x="84.2188%" y="69" width="0.0312%" height="15" fill="rgb(210,31,22)" fg:x="2695" fg:w="1"/><text x="84.4688%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251bf (1 samples, 0.03%)</title><rect x="84.2500%" y="53" width="0.0312%" height="15" fill="rgb(239,54,39)" fg:x="2696" fg:w="1"/><text x="84.5000%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125203 (2 samples, 0.06%)</title><rect x="84.2812%" y="53" width="0.0625%" height="15" fill="rgb(230,99,41)" fg:x="2697" fg:w="2"/><text x="84.5312%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (7 samples, 0.22%)</title><rect x="84.3438%" y="53" width="0.2188%" height="15" fill="rgb(253,106,12)" fg:x="2699" fg:w="7"/><text x="84.5938%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (1 samples, 0.03%)</title><rect x="84.5625%" y="53" width="0.0312%" height="15" fill="rgb(213,46,41)" fg:x="2706" fg:w="1"/><text x="84.8125%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125226 (1 samples, 0.03%)</title><rect x="84.5938%" y="53" width="0.0312%" height="15" fill="rgb(215,133,35)" fg:x="2707" fg:w="1"/><text x="84.8438%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125229 (1 samples, 0.03%)</title><rect x="84.6250%" y="53" width="0.0312%" height="15" fill="rgb(213,28,5)" fg:x="2708" fg:w="1"/><text x="84.8750%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (5 samples, 0.16%)</title><rect x="84.6562%" y="53" width="0.1562%" height="15" fill="rgb(215,77,49)" fg:x="2709" fg:w="5"/><text x="84.9062%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912528f (2 samples, 0.06%)</title><rect x="84.8125%" y="53" width="0.0625%" height="15" fill="rgb(248,100,22)" fg:x="2714" fg:w="2"/><text x="85.0625%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912529e (1 samples, 0.03%)</title><rect x="84.8750%" y="53" width="0.0312%" height="15" fill="rgb(208,67,9)" fg:x="2716" fg:w="1"/><text x="85.1250%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252ee (5 samples, 0.16%)</title><rect x="84.9062%" y="53" width="0.1562%" height="15" fill="rgb(219,133,21)" fg:x="2717" fg:w="5"/><text x="85.1562%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252f0 (3 samples, 0.09%)</title><rect x="85.0625%" y="53" width="0.0938%" height="15" fill="rgb(246,46,29)" fg:x="2722" fg:w="3"/><text x="85.3125%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125302 (1 samples, 0.03%)</title><rect x="85.1562%" y="53" width="0.0312%" height="15" fill="rgb(246,185,52)" fg:x="2725" fg:w="1"/><text x="85.4062%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (2 samples, 0.06%)</title><rect x="85.1875%" y="53" width="0.0625%" height="15" fill="rgb(252,136,11)" fg:x="2726" fg:w="2"/><text x="85.4375%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912531a (1 samples, 0.03%)</title><rect x="85.2500%" y="53" width="0.0312%" height="15" fill="rgb(219,138,53)" fg:x="2728" fg:w="1"/><text x="85.5000%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125321 (1 samples, 0.03%)</title><rect x="85.2812%" y="53" width="0.0312%" height="15" fill="rgb(211,51,23)" fg:x="2729" fg:w="1"/><text x="85.5312%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125324 (2 samples, 0.06%)</title><rect x="85.3125%" y="53" width="0.0625%" height="15" fill="rgb(247,221,28)" fg:x="2730" fg:w="2"/><text x="85.5625%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (9 samples, 0.28%)</title><rect x="85.3750%" y="53" width="0.2812%" height="15" fill="rgb(251,222,45)" fg:x="2732" fg:w="9"/><text x="85.6250%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125397 (1 samples, 0.03%)</title><rect x="85.6562%" y="53" width="0.0312%" height="15" fill="rgb(217,162,53)" fg:x="2741" fg:w="1"/><text x="85.9062%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253ce (1 samples, 0.03%)</title><rect x="85.6875%" y="53" width="0.0312%" height="15" fill="rgb(229,93,14)" fg:x="2742" fg:w="1"/><text x="85.9375%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912846b (49 samples, 1.53%)</title><rect x="84.2500%" y="69" width="1.5312%" height="15" fill="rgb(209,67,49)" fg:x="2696" fg:w="49"/><text x="84.5000%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (2 samples, 0.06%)</title><rect x="85.7188%" y="53" width="0.0625%" height="15" fill="rgb(213,87,29)" fg:x="2743" fg:w="2"/><text x="85.9688%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128488 (6 samples, 0.19%)</title><rect x="85.7812%" y="69" width="0.1875%" height="15" fill="rgb(205,151,52)" fg:x="2745" fg:w="6"/><text x="86.0312%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.19%)</title><rect x="85.7812%" y="53" width="0.1875%" height="15" fill="rgb(253,215,39)" fg:x="2745" fg:w="6"/><text x="86.0312%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466d6 (1 samples, 0.03%)</title><rect x="85.9688%" y="53" width="0.0312%" height="15" fill="rgb(221,220,41)" fg:x="2751" fg:w="1"/><text x="86.2188%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467ee (1 samples, 0.03%)</title><rect x="86.0000%" y="53" width="0.0312%" height="15" fill="rgb(218,133,21)" fg:x="2752" fg:w="1"/><text x="86.2500%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914680f (2 samples, 0.06%)</title><rect x="86.0312%" y="53" width="0.0625%" height="15" fill="rgb(221,193,43)" fg:x="2753" fg:w="2"/><text x="86.2812%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146812 (1 samples, 0.03%)</title><rect x="86.0938%" y="53" width="0.0312%" height="15" fill="rgb(240,128,52)" fg:x="2755" fg:w="1"/><text x="86.3438%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914682b (1 samples, 0.03%)</title><rect x="86.1250%" y="53" width="0.0312%" height="15" fill="rgb(253,114,12)" fg:x="2756" fg:w="1"/><text x="86.3750%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146843 (2 samples, 0.06%)</title><rect x="86.1562%" y="53" width="0.0625%" height="15" fill="rgb(215,223,47)" fg:x="2757" fg:w="2"/><text x="86.4062%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146895 (1 samples, 0.03%)</title><rect x="86.2188%" y="53" width="0.0312%" height="15" fill="rgb(248,225,23)" fg:x="2759" fg:w="1"/><text x="86.4688%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468aa (1 samples, 0.03%)</title><rect x="86.2500%" y="53" width="0.0312%" height="15" fill="rgb(250,108,0)" fg:x="2760" fg:w="1"/><text x="86.5000%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="86.2500%" y="37" width="0.0312%" height="15" fill="rgb(228,208,7)" fg:x="2760" fg:w="1"/><text x="86.5000%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468b1 (1 samples, 0.03%)</title><rect x="86.2812%" y="53" width="0.0312%" height="15" fill="rgb(244,45,10)" fg:x="2761" fg:w="1"/><text x="86.5312%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468b5 (1 samples, 0.03%)</title><rect x="86.3125%" y="53" width="0.0312%" height="15" fill="rgb(207,125,25)" fg:x="2762" fg:w="1"/><text x="86.5625%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468c6 (1 samples, 0.03%)</title><rect x="86.3438%" y="53" width="0.0312%" height="15" fill="rgb(210,195,18)" fg:x="2763" fg:w="1"/><text x="86.5938%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468fe (1 samples, 0.03%)</title><rect x="86.3750%" y="53" width="0.0312%" height="15" fill="rgb(249,80,12)" fg:x="2764" fg:w="1"/><text x="86.6250%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146908 (1 samples, 0.03%)</title><rect x="86.4062%" y="53" width="0.0312%" height="15" fill="rgb(221,65,9)" fg:x="2765" fg:w="1"/><text x="86.6562%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914694d (1 samples, 0.03%)</title><rect x="86.4375%" y="53" width="0.0312%" height="15" fill="rgb(235,49,36)" fg:x="2766" fg:w="1"/><text x="86.6875%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (6 samples, 0.19%)</title><rect x="86.4688%" y="53" width="0.1875%" height="15" fill="rgb(225,32,20)" fg:x="2767" fg:w="6"/><text x="86.7188%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191469ba (4 samples, 0.12%)</title><rect x="86.6562%" y="53" width="0.1250%" height="15" fill="rgb(215,141,46)" fg:x="2773" fg:w="4"/><text x="86.9062%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146a07 (1 samples, 0.03%)</title><rect x="86.7812%" y="53" width="0.0312%" height="15" fill="rgb(250,160,47)" fg:x="2777" fg:w="1"/><text x="87.0312%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128495 (29 samples, 0.91%)</title><rect x="85.9688%" y="69" width="0.9062%" height="15" fill="rgb(216,222,40)" fg:x="2751" fg:w="29"/><text x="86.2188%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="86.8125%" y="53" width="0.0625%" height="15" fill="rgb(234,217,39)" fg:x="2778" fg:w="2"/><text x="87.0625%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912849f (1 samples, 0.03%)</title><rect x="86.8750%" y="69" width="0.0312%" height="15" fill="rgb(207,178,40)" fg:x="2780" fg:w="1"/><text x="87.1250%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb9f (108 samples, 3.38%)</title><rect x="83.5938%" y="85" width="3.3750%" height="15" fill="rgb(221,136,13)" fg:x="2675" fg:w="108"/><text x="83.8438%" y="95.50">lib..</text></g><g><title>libsystem_malloc.dylib`0x7ff8191466a0 (2 samples, 0.06%)</title><rect x="86.9062%" y="69" width="0.0625%" height="15" fill="rgb(249,199,10)" fg:x="2781" fg:w="2"/><text x="87.1562%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fba2 (1 samples, 0.03%)</title><rect x="86.9688%" y="85" width="0.0312%" height="15" fill="rgb(249,222,13)" fg:x="2783" fg:w="1"/><text x="87.2188%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fba9 (1 samples, 0.03%)</title><rect x="87.0000%" y="85" width="0.0312%" height="15" fill="rgb(244,185,38)" fg:x="2784" fg:w="1"/><text x="87.2500%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fbb7 (1 samples, 0.03%)</title><rect x="87.0312%" y="85" width="0.0312%" height="15" fill="rgb(236,202,9)" fg:x="2785" fg:w="1"/><text x="87.2812%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81915026b (123 samples, 3.84%)</title><rect x="83.2500%" y="101" width="3.8438%" height="15" fill="rgb(250,229,37)" fg:x="2664" fg:w="123"/><text x="83.5000%" y="111.50">libs..</text></g><g><title>libsystem_malloc.dylib`0x7ff81914fbd1 (1 samples, 0.03%)</title><rect x="87.0625%" y="85" width="0.0312%" height="15" fill="rgb(206,174,23)" fg:x="2786" fg:w="1"/><text x="87.3125%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191502b8 (1 samples, 0.03%)</title><rect x="87.0938%" y="101" width="0.0312%" height="15" fill="rgb(211,33,43)" fg:x="2787" fg:w="1"/><text x="87.3438%" y="111.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (180 samples, 5.62%)</title><rect x="81.5312%" y="133" width="5.6250%" height="15" fill="rgb(245,58,50)" fg:x="2609" fg:w="180"/><text x="81.7812%" y="143.50">redirs`..</text></g><g><title>redirs`alloc::raw_vec::finish_grow (160 samples, 5.00%)</title><rect x="82.1562%" y="117" width="5.0000%" height="15" fill="rgb(244,68,36)" fg:x="2629" fg:w="160"/><text x="82.4062%" y="127.50">redirs..</text></g><g><title>libsystem_malloc.dylib`0x7ff8191502c0 (1 samples, 0.03%)</title><rect x="87.1250%" y="101" width="0.0312%" height="15" fill="rgb(232,229,15)" fg:x="2788" fg:w="1"/><text x="87.3750%" y="111.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (2 samples, 0.06%)</title><rect x="87.1562%" y="133" width="0.0625%" height="15" fill="rgb(254,30,23)" fg:x="2789" fg:w="2"/><text x="87.4062%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="87.5000%" y="101" width="0.0312%" height="15" fill="rgb(235,160,14)" fg:x="2800" fg:w="1"/><text x="87.7500%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125170 (1 samples, 0.03%)</title><rect x="87.8438%" y="85" width="0.0312%" height="15" fill="rgb(212,155,44)" fg:x="2811" fg:w="1"/><text x="88.0938%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253df (1 samples, 0.03%)</title><rect x="87.8750%" y="85" width="0.0312%" height="15" fill="rgb(226,2,50)" fg:x="2812" fg:w="1"/><text x="88.1250%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f64a (3 samples, 0.09%)</title><rect x="87.9062%" y="85" width="0.0938%" height="15" fill="rgb(234,177,6)" fg:x="2813" fg:w="3"/><text x="88.1562%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f65d (1 samples, 0.03%)</title><rect x="88.0000%" y="85" width="0.0312%" height="15" fill="rgb(217,24,9)" fg:x="2816" fg:w="1"/><text x="88.2500%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f660 (2 samples, 0.06%)</title><rect x="88.0312%" y="85" width="0.0625%" height="15" fill="rgb(220,13,46)" fg:x="2817" fg:w="2"/><text x="88.2812%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f671 (1 samples, 0.03%)</title><rect x="88.0938%" y="85" width="0.0312%" height="15" fill="rgb(239,221,27)" fg:x="2819" fg:w="1"/><text x="88.3438%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f677 (1 samples, 0.03%)</title><rect x="88.1250%" y="85" width="0.0312%" height="15" fill="rgb(222,198,25)" fg:x="2820" fg:w="1"/><text x="88.3750%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f680 (1 samples, 0.03%)</title><rect x="88.1562%" y="85" width="0.0312%" height="15" fill="rgb(211,99,13)" fg:x="2821" fg:w="1"/><text x="88.4062%" y="95.50"></text></g><g><title>redirs`__rdl_alloc (1 samples, 0.03%)</title><rect x="88.1875%" y="85" width="0.0312%" height="15" fill="rgb(232,111,31)" fg:x="2822" fg:w="1"/><text x="88.4375%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251b4 (1 samples, 0.03%)</title><rect x="88.2500%" y="69" width="0.0312%" height="15" fill="rgb(245,82,37)" fg:x="2824" fg:w="1"/><text x="88.5000%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251bf (1 samples, 0.03%)</title><rect x="88.2812%" y="69" width="0.0312%" height="15" fill="rgb(227,149,46)" fg:x="2825" fg:w="1"/><text x="88.5312%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251fd (1 samples, 0.03%)</title><rect x="88.3125%" y="69" width="0.0312%" height="15" fill="rgb(218,36,50)" fg:x="2826" fg:w="1"/><text x="88.5625%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (9 samples, 0.28%)</title><rect x="88.3438%" y="69" width="0.2812%" height="15" fill="rgb(226,80,48)" fg:x="2827" fg:w="9"/><text x="88.5938%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912520b (1 samples, 0.03%)</title><rect x="88.6250%" y="69" width="0.0312%" height="15" fill="rgb(238,224,15)" fg:x="2836" fg:w="1"/><text x="88.8750%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125215 (1 samples, 0.03%)</title><rect x="88.6562%" y="69" width="0.0312%" height="15" fill="rgb(241,136,10)" fg:x="2837" fg:w="1"/><text x="88.9062%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125219 (1 samples, 0.03%)</title><rect x="88.6875%" y="69" width="0.0312%" height="15" fill="rgb(208,32,45)" fg:x="2838" fg:w="1"/><text x="88.9375%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912521c (1 samples, 0.03%)</title><rect x="88.7188%" y="69" width="0.0312%" height="15" fill="rgb(207,135,9)" fg:x="2839" fg:w="1"/><text x="88.9688%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (2 samples, 0.06%)</title><rect x="88.7500%" y="69" width="0.0625%" height="15" fill="rgb(206,86,44)" fg:x="2840" fg:w="2"/><text x="89.0000%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125229 (1 samples, 0.03%)</title><rect x="88.8125%" y="69" width="0.0312%" height="15" fill="rgb(245,177,15)" fg:x="2842" fg:w="1"/><text x="89.0625%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125233 (1 samples, 0.03%)</title><rect x="88.8438%" y="69" width="0.0312%" height="15" fill="rgb(206,64,50)" fg:x="2843" fg:w="1"/><text x="89.0938%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (1 samples, 0.03%)</title><rect x="88.8750%" y="69" width="0.0312%" height="15" fill="rgb(234,36,40)" fg:x="2844" fg:w="1"/><text x="89.1250%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523d (1 samples, 0.03%)</title><rect x="88.9062%" y="69" width="0.0312%" height="15" fill="rgb(213,64,8)" fg:x="2845" fg:w="1"/><text x="89.1562%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912525b (2 samples, 0.06%)</title><rect x="88.9375%" y="69" width="0.0625%" height="15" fill="rgb(210,75,36)" fg:x="2846" fg:w="2"/><text x="89.1875%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125305 (2 samples, 0.06%)</title><rect x="89.0000%" y="69" width="0.0625%" height="15" fill="rgb(229,88,21)" fg:x="2848" fg:w="2"/><text x="89.2500%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125308 (1 samples, 0.03%)</title><rect x="89.0625%" y="69" width="0.0312%" height="15" fill="rgb(252,204,47)" fg:x="2850" fg:w="1"/><text x="89.3125%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (5 samples, 0.16%)</title><rect x="89.0938%" y="69" width="0.1562%" height="15" fill="rgb(208,77,27)" fg:x="2851" fg:w="5"/><text x="89.3438%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532a (1 samples, 0.03%)</title><rect x="89.2500%" y="69" width="0.0312%" height="15" fill="rgb(221,76,26)" fg:x="2856" fg:w="1"/><text x="89.5000%" y="79.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (69 samples, 2.16%)</title><rect x="87.5312%" y="101" width="2.1562%" height="15" fill="rgb(225,139,18)" fg:x="2801" fg:w="69"/><text x="87.7812%" y="111.50">r..</text></g><g><title>redirs`alloc::raw_vec::finish_grow (47 samples, 1.47%)</title><rect x="88.2188%" y="85" width="1.4688%" height="15" fill="rgb(230,137,11)" fg:x="2823" fg:w="47"/><text x="88.4688%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (13 samples, 0.41%)</title><rect x="89.2812%" y="69" width="0.4062%" height="15" fill="rgb(212,28,1)" fg:x="2857" fg:w="13"/><text x="89.5312%" y="79.50"></text></g><g><title>redirs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (77 samples, 2.41%)</title><rect x="87.3125%" y="117" width="2.4062%" height="15" fill="rgb(248,164,17)" fg:x="2794" fg:w="77"/><text x="87.5625%" y="127.50">re..</text></g><g><title>redirs`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="89.6875%" y="101" width="0.0312%" height="15" fill="rgb(222,171,42)" fg:x="2870" fg:w="1"/><text x="89.9375%" y="111.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="89.7188%" y="117" width="0.0312%" height="15" fill="rgb(243,84,45)" fg:x="2871" fg:w="1"/><text x="89.9688%" y="127.50"></text></g><g><title>redirs`redirs::message::message::Message::to_string (511 samples, 15.97%)</title><rect x="74.1562%" y="181" width="15.9688%" height="15" fill="rgb(252,49,23)" fg:x="2373" fg:w="511"/><text x="74.4062%" y="191.50">redirs`redirs::message::m..</text></g><g><title>redirs`redirs::message::serialise::serialise_message (441 samples, 13.78%)</title><rect x="76.3438%" y="165" width="13.7812%" height="15" fill="rgb(215,19,7)" fg:x="2443" fg:w="441"/><text x="76.5938%" y="175.50">redirs`redirs::messag..</text></g><g><title>redirs`redirs::message::serialise::serialise_message (329 samples, 10.28%)</title><rect x="79.8438%" y="149" width="10.2812%" height="15" fill="rgb(238,81,41)" fg:x="2555" fg:w="329"/><text x="80.0938%" y="159.50">redirs`redirs::..</text></g><g><title>redirs`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (93 samples, 2.91%)</title><rect x="87.2188%" y="133" width="2.9062%" height="15" fill="rgb(210,199,37)" fg:x="2791" fg:w="93"/><text x="87.4688%" y="143.50">re..</text></g><g><title>redirs`core::fmt::Formatter::pad_integral (12 samples, 0.38%)</title><rect x="89.7500%" y="117" width="0.3750%" height="15" fill="rgb(244,192,49)" fg:x="2872" fg:w="12"/><text x="90.0000%" y="127.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral::write_prefix (5 samples, 0.16%)</title><rect x="89.9688%" y="101" width="0.1562%" height="15" fill="rgb(226,211,11)" fg:x="2879" fg:w="5"/><text x="90.2188%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251bb (1 samples, 0.03%)</title><rect x="90.5938%" y="165" width="0.0312%" height="15" fill="rgb(236,162,54)" fg:x="2899" fg:w="1"/><text x="90.8438%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251ec (1 samples, 0.03%)</title><rect x="90.6250%" y="165" width="0.0312%" height="15" fill="rgb(220,229,9)" fg:x="2900" fg:w="1"/><text x="90.8750%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (1 samples, 0.03%)</title><rect x="90.6562%" y="165" width="0.0312%" height="15" fill="rgb(250,87,22)" fg:x="2901" fg:w="1"/><text x="90.9062%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125226 (1 samples, 0.03%)</title><rect x="90.6875%" y="165" width="0.0312%" height="15" fill="rgb(239,43,17)" fg:x="2902" fg:w="1"/><text x="90.9375%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (8 samples, 0.25%)</title><rect x="90.7188%" y="165" width="0.2500%" height="15" fill="rgb(231,177,25)" fg:x="2903" fg:w="8"/><text x="90.9688%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523d (3 samples, 0.09%)</title><rect x="90.9688%" y="165" width="0.0938%" height="15" fill="rgb(219,179,1)" fg:x="2911" fg:w="3"/><text x="91.2188%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252e3 (1 samples, 0.03%)</title><rect x="91.0625%" y="165" width="0.0312%" height="15" fill="rgb(238,219,53)" fg:x="2914" fg:w="1"/><text x="91.3125%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252ee (2 samples, 0.06%)</title><rect x="91.0938%" y="165" width="0.0625%" height="15" fill="rgb(232,167,36)" fg:x="2915" fg:w="2"/><text x="91.3438%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (2 samples, 0.06%)</title><rect x="91.1562%" y="165" width="0.0625%" height="15" fill="rgb(244,19,51)" fg:x="2917" fg:w="2"/><text x="91.4062%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (3 samples, 0.09%)</title><rect x="91.2188%" y="165" width="0.0938%" height="15" fill="rgb(224,6,22)" fg:x="2919" fg:w="3"/><text x="91.4688%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (1 samples, 0.03%)</title><rect x="91.3125%" y="165" width="0.0312%" height="15" fill="rgb(224,145,5)" fg:x="2922" fg:w="1"/><text x="91.5625%" y="175.50"></text></g><g><title>redirs`&lt;&amp;[u8] as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.03%)</title><rect x="91.3438%" y="165" width="0.0312%" height="15" fill="rgb(234,130,49)" fg:x="2923" fg:w="1"/><text x="91.5938%" y="175.50"></text></g><g><title>redirs`&lt;&amp;str as nom::traits::FindToken&lt;u8&gt;&gt;::find_token (1 samples, 0.03%)</title><rect x="91.3750%" y="165" width="0.0312%" height="15" fill="rgb(254,6,2)" fg:x="2924" fg:w="1"/><text x="91.6250%" y="175.50"></text></g><g><title>redirs`&lt;&amp;[u8] as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.03%)</title><rect x="91.5312%" y="149" width="0.0312%" height="15" fill="rgb(208,96,46)" fg:x="2929" fg:w="1"/><text x="91.7812%" y="159.50"></text></g><g><title>redirs`&lt;&amp;str as nom::traits::FindToken&lt;u8&gt;&gt;::find_token (200 samples, 6.25%)</title><rect x="91.5625%" y="149" width="6.2500%" height="15" fill="rgb(239,3,39)" fg:x="2930" fg:w="200"/><text x="91.8125%" y="159.50">redirs`&lt;..</text></g><g><title>redirs`memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (197 samples, 6.16%)</title><rect x="91.6562%" y="133" width="6.1562%" height="15" fill="rgb(233,210,1)" fg:x="2933" fg:w="197"/><text x="91.9062%" y="143.50">redirs`m..</text></g><g><title>redirs`memchr::arch::x86_64::avx2::memchr::One::find_raw (1 samples, 0.03%)</title><rect x="97.7812%" y="117" width="0.0312%" height="15" fill="rgb(244,137,37)" fg:x="3129" fg:w="1"/><text x="98.0312%" y="127.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (6 samples, 0.19%)</title><rect x="97.8125%" y="149" width="0.1875%" height="15" fill="rgb(240,136,2)" fg:x="3130" fg:w="6"/><text x="98.0625%" y="159.50"></text></g><g><title>redirs`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="97.8750%" y="133" width="0.1250%" height="15" fill="rgb(239,18,37)" fg:x="3132" fg:w="4"/><text x="98.1250%" y="143.50"></text></g><g><title>redirs`core::num::_&lt;impl core::str::traits::FromStr for isize&gt;::from_str (3 samples, 0.09%)</title><rect x="98.0000%" y="149" width="0.0938%" height="15" fill="rgb(218,185,22)" fg:x="3136" fg:w="3"/><text x="98.2500%" y="159.50"></text></g><g><title>redirs`core::num::_&lt;impl i64&gt;::from_str_radix (1 samples, 0.03%)</title><rect x="98.0625%" y="133" width="0.0312%" height="15" fill="rgb(225,218,4)" fg:x="3138" fg:w="1"/><text x="98.3125%" y="143.50"></text></g><g><title>redirs`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (215 samples, 6.72%)</title><rect x="91.4062%" y="165" width="6.7188%" height="15" fill="rgb(230,182,32)" fg:x="2925" fg:w="215"/><text x="91.6562%" y="175.50">redirs`&lt;F..</text></g><g><title>redirs`core::num::_&lt;impl i64&gt;::from_str_radix (1 samples, 0.03%)</title><rect x="98.0938%" y="149" width="0.0312%" height="15" fill="rgb(242,56,43)" fg:x="3139" fg:w="1"/><text x="98.3438%" y="159.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (2 samples, 0.06%)</title><rect x="98.1250%" y="165" width="0.0625%" height="15" fill="rgb(233,99,24)" fg:x="3140" fg:w="2"/><text x="98.3750%" y="175.50"></text></g><g><title>redirs`&lt;&amp;[u8] as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.03%)</title><rect x="98.6875%" y="133" width="0.0312%" height="15" fill="rgb(234,209,42)" fg:x="3158" fg:w="1"/><text x="98.9375%" y="143.50"></text></g><g><title>redirs`&lt;&amp;str as nom::traits::FindToken&lt;u8&gt;&gt;::find_token (2 samples, 0.06%)</title><rect x="98.7188%" y="133" width="0.0625%" height="15" fill="rgb(227,7,12)" fg:x="3159" fg:w="2"/><text x="98.9688%" y="143.50"></text></g><g><title>redirs`memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (1 samples, 0.03%)</title><rect x="98.7500%" y="117" width="0.0312%" height="15" fill="rgb(245,203,43)" fg:x="3160" fg:w="1"/><text x="99.0000%" y="127.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (6 samples, 0.19%)</title><rect x="98.7812%" y="133" width="0.1875%" height="15" fill="rgb(238,205,33)" fg:x="3161" fg:w="6"/><text x="99.0312%" y="143.50"></text></g><g><title>redirs`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="98.8750%" y="117" width="0.0938%" height="15" fill="rgb(231,56,7)" fg:x="3164" fg:w="3"/><text x="99.1250%" y="127.50"></text></g><g><title>redirs`core::num::_&lt;impl core::str::traits::FromStr for isize&gt;::from_str (3 samples, 0.09%)</title><rect x="98.9688%" y="133" width="0.0938%" height="15" fill="rgb(244,186,29)" fg:x="3167" fg:w="3"/><text x="99.2188%" y="143.50"></text></g><g><title>redirs`core::num::_&lt;impl i64&gt;::from_str_radix (3 samples, 0.09%)</title><rect x="98.9688%" y="117" width="0.0938%" height="15" fill="rgb(234,111,31)" fg:x="3167" fg:w="3"/><text x="99.2188%" y="127.50"></text></g><g><title>redirs`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (19 samples, 0.59%)</title><rect x="98.5000%" y="149" width="0.5938%" height="15" fill="rgb(241,149,10)" fg:x="3152" fg:w="19"/><text x="98.7500%" y="159.50"></text></g><g><title>redirs`core::num::_&lt;impl i64&gt;::from_str_radix (1 samples, 0.03%)</title><rect x="99.0625%" y="133" width="0.0312%" height="15" fill="rgb(249,206,44)" fg:x="3170" fg:w="1"/><text x="99.3125%" y="143.50"></text></g><g><title>redirs`redirs::message::parse::parse_message (288 samples, 9.00%)</title><rect x="90.1250%" y="181" width="9.0000%" height="15" fill="rgb(251,153,30)" fg:x="2884" fg:w="288"/><text x="90.3750%" y="191.50">redirs`redirs..</text></g><g><title>redirs`redirs::message::parse::parse_message (30 samples, 0.94%)</title><rect x="98.1875%" y="165" width="0.9375%" height="15" fill="rgb(239,152,38)" fg:x="3142" fg:w="30"/><text x="98.4375%" y="175.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (1 samples, 0.03%)</title><rect x="99.0938%" y="149" width="0.0312%" height="15" fill="rgb(249,139,47)" fg:x="3171" fg:w="1"/><text x="99.3438%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914681e (1 samples, 0.03%)</title><rect x="99.1875%" y="165" width="0.0312%" height="15" fill="rgb(244,64,35)" fg:x="3174" fg:w="1"/><text x="99.4375%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (1 samples, 0.03%)</title><rect x="99.2188%" y="165" width="0.0312%" height="15" fill="rgb(216,46,15)" fg:x="3175" fg:w="1"/><text x="99.4688%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="99.2500%" y="165" width="0.0312%" height="15" fill="rgb(250,74,19)" fg:x="3176" fg:w="1"/><text x="99.5000%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f682 (1 samples, 0.03%)</title><rect x="99.3125%" y="117" width="0.0312%" height="15" fill="rgb(249,42,33)" fg:x="3178" fg:w="1"/><text x="99.5625%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251cb (1 samples, 0.03%)</title><rect x="99.3438%" y="101" width="0.0312%" height="15" fill="rgb(242,149,17)" fg:x="3179" fg:w="1"/><text x="99.5938%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (1 samples, 0.03%)</title><rect x="99.3750%" y="101" width="0.0312%" height="15" fill="rgb(244,29,21)" fg:x="3180" fg:w="1"/><text x="99.6250%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252a2 (1 samples, 0.03%)</title><rect x="99.4062%" y="101" width="0.0312%" height="15" fill="rgb(220,130,37)" fg:x="3181" fg:w="1"/><text x="99.6562%" y="111.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (5 samples, 0.16%)</title><rect x="99.3125%" y="133" width="0.1562%" height="15" fill="rgb(211,67,2)" fg:x="3178" fg:w="5"/><text x="99.5625%" y="143.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (4 samples, 0.12%)</title><rect x="99.3438%" y="117" width="0.1250%" height="15" fill="rgb(235,68,52)" fg:x="3179" fg:w="4"/><text x="99.5938%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125324 (1 samples, 0.03%)</title><rect x="99.4375%" y="101" width="0.0312%" height="15" fill="rgb(246,142,3)" fg:x="3182" fg:w="1"/><text x="99.6875%" y="111.50"></text></g><g><title>redirs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.22%)</title><rect x="99.2812%" y="149" width="0.2188%" height="15" fill="rgb(241,25,7)" fg:x="3177" fg:w="7"/><text x="99.5312%" y="159.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="99.4688%" y="133" width="0.0312%" height="15" fill="rgb(242,119,39)" fg:x="3183" fg:w="1"/><text x="99.7188%" y="143.50"></text></g><g><title>redirs`redirs::message::serialise::serialise_message (13 samples, 0.41%)</title><rect x="99.1250%" y="181" width="0.4062%" height="15" fill="rgb(241,98,45)" fg:x="3172" fg:w="13"/><text x="99.3750%" y="191.50"></text></g><g><title>redirs`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (8 samples, 0.25%)</title><rect x="99.2812%" y="165" width="0.2500%" height="15" fill="rgb(254,28,30)" fg:x="3177" fg:w="8"/><text x="99.5312%" y="175.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="99.5000%" y="149" width="0.0312%" height="15" fill="rgb(241,142,54)" fg:x="3184" fg:w="1"/><text x="99.7500%" y="159.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.03%)</title><rect x="99.5000%" y="133" width="0.0312%" height="15" fill="rgb(222,85,15)" fg:x="3184" fg:w="1"/><text x="99.7500%" y="143.50"></text></g><g><title>redirs`redirs::server::handle_client (3,170 samples, 99.06%)</title><rect x="0.7812%" y="197" width="99.0625%" height="15" fill="rgb(210,85,47)" fg:x="25" fg:w="3170"/><text x="1.0312%" y="207.50">redirs`redirs::server::handle_client</text></g><g><title>redirs`std::os::unix::net::datagram::UnixDatagram::recv (10 samples, 0.31%)</title><rect x="99.5312%" y="181" width="0.3125%" height="15" fill="rgb(224,206,25)" fg:x="3185" fg:w="10"/><text x="99.7812%" y="191.50"></text></g><g><title>redirs`&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="99.8438%" y="181" width="0.0625%" height="15" fill="rgb(243,201,19)" fg:x="3195" fg:w="2"/><text x="100.0938%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__accept (2 samples, 0.06%)</title><rect x="99.8438%" y="165" width="0.0625%" height="15" fill="rgb(236,59,4)" fg:x="3195" fg:w="2"/><text x="100.0938%" y="175.50"></text></g><g><title>redirs`core::ops::function::FnOnce::call_once{{vtable.shim}} (3,193 samples, 99.78%)</title><rect x="0.1562%" y="229" width="99.7812%" height="15" fill="rgb(254,179,45)" fg:x="5" fg:w="3193"/><text x="0.4062%" y="239.50">redirs`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>redirs`std::sys::backtrace::__rust_begin_short_backtrace (3,193 samples, 99.78%)</title><rect x="0.1562%" y="213" width="99.7812%" height="15" fill="rgb(226,14,10)" fg:x="5" fg:w="3193"/><text x="0.4062%" y="223.50">redirs`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>redirs`redirs::server::listen (3 samples, 0.09%)</title><rect x="99.8438%" y="197" width="0.0938%" height="15" fill="rgb(244,27,41)" fg:x="3195" fg:w="3"/><text x="100.0938%" y="207.50"></text></g><g><title>redirs`std::thread::Builder::spawn_unchecked (1 samples, 0.03%)</title><rect x="99.9062%" y="181" width="0.0312%" height="15" fill="rgb(235,35,32)" fg:x="3197" fg:w="1"/><text x="100.1562%" y="191.50"></text></g><g><title>redirs`std::sys::pal::unix::thread::Thread::new (1 samples, 0.03%)</title><rect x="99.9062%" y="165" width="0.0312%" height="15" fill="rgb(218,68,31)" fg:x="3197" fg:w="1"/><text x="100.1562%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (1 samples, 0.03%)</title><rect x="99.9062%" y="149" width="0.0312%" height="15" fill="rgb(207,120,37)" fg:x="3197" fg:w="1"/><text x="100.1562%" y="159.50"></text></g><g><title>all (3,200 samples, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(227,98,0)" fg:x="0" fg:w="3200"/><text x="0.2500%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (3,197 samples, 99.91%)</title><rect x="0.0938%" y="277" width="99.9062%" height="15" fill="rgb(207,7,3)" fg:x="3" fg:w="3197"/><text x="0.3438%" y="287.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (3,196 samples, 99.88%)</title><rect x="0.1250%" y="261" width="99.8750%" height="15" fill="rgb(206,98,19)" fg:x="4" fg:w="3196"/><text x="0.3750%" y="271.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>redirs`std::sys::pal::unix::thread::Thread::new::thread_start (3,195 samples, 99.84%)</title><rect x="0.1562%" y="245" width="99.8438%" height="15" fill="rgb(217,5,26)" fg:x="5" fg:w="3195"/><text x="0.4062%" y="255.50">redirs`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>redirs`std::sys::pal::unix::stack_overflow::imp::make_handler (2 samples, 0.06%)</title><rect x="99.9375%" y="229" width="0.0625%" height="15" fill="rgb(235,190,38)" fg:x="3198" fg:w="2"/><text x="100.1875%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (2 samples, 0.06%)</title><rect x="99.9375%" y="213" width="0.0625%" height="15" fill="rgb(247,86,24)" fg:x="3198" fg:w="2"/><text x="100.1875%" y="223.50"></text></g></svg></svg>