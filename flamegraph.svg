<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="293.00"> </text><svg id="frames" x="10" width="1180" total_samples="3694"><g><title>libsystem_malloc.dylib`0x7ff819125c2d (1 samples, 0.03%)</title><rect x="0.0541%" y="197" width="0.0271%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="1"/><text x="0.3041%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (1 samples, 0.03%)</title><rect x="0.0812%" y="165" width="0.0271%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="1"/><text x="0.3312%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125c2d (1 samples, 0.03%)</title><rect x="0.1083%" y="165" width="0.0271%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="1"/><text x="0.3583%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146a11 (2 samples, 0.05%)</title><rect x="0.1354%" y="165" width="0.0541%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="2"/><text x="0.3854%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500dc (2 samples, 0.05%)</title><rect x="0.1895%" y="165" width="0.0541%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="2"/><text x="0.4395%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500e1 (2 samples, 0.05%)</title><rect x="0.2436%" y="165" width="0.0541%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="2"/><text x="0.4936%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500fe (1 samples, 0.03%)</title><rect x="0.2978%" y="165" width="0.0271%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="1"/><text x="0.5478%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150101 (1 samples, 0.03%)</title><rect x="0.3249%" y="165" width="0.0271%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="1"/><text x="0.5749%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150105 (1 samples, 0.03%)</title><rect x="0.3519%" y="165" width="0.0271%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="1"/><text x="0.6019%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81915010e (1 samples, 0.03%)</title><rect x="0.3790%" y="165" width="0.0271%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="1"/><text x="0.6290%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="0.4061%" y="165" width="0.0271%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="1"/><text x="0.6561%" y="175.50"></text></g><g><title>redirs`__rdl_dealloc (5 samples, 0.14%)</title><rect x="0.4331%" y="165" width="0.1354%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="5"/><text x="0.6831%" y="175.50"></text></g><g><title>redirs`redirs::command::handle_command (2 samples, 0.05%)</title><rect x="0.5685%" y="165" width="0.0541%" height="15" fill="rgb(216,20,37)" fg:x="21" fg:w="2"/><text x="0.8185%" y="175.50"></text></g><g><title>redirs`redirs::message::parse::parse_message (1 samples, 0.03%)</title><rect x="0.6226%" y="165" width="0.0271%" height="15" fill="rgb(206,188,39)" fg:x="23" fg:w="1"/><text x="0.8726%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1,584 samples, 42.88%)</title><rect x="1.1099%" y="149" width="42.8803%" height="15" fill="rgb(217,207,13)" fg:x="41" fg:w="1584"/><text x="1.3599%" y="159.50">libsystem_kernel.dylib`__recvfrom</text></g><g><title>libsystem_malloc.dylib`0x7ff819125170 (2 samples, 0.05%)</title><rect x="43.9903%" y="149" width="0.0541%" height="15" fill="rgb(231,73,38)" fg:x="1625" fg:w="2"/><text x="44.2403%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125173 (1 samples, 0.03%)</title><rect x="44.0444%" y="149" width="0.0271%" height="15" fill="rgb(225,20,46)" fg:x="1627" fg:w="1"/><text x="44.2944%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912517a (2 samples, 0.05%)</title><rect x="44.0715%" y="149" width="0.0541%" height="15" fill="rgb(210,31,41)" fg:x="1628" fg:w="2"/><text x="44.3215%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912517f (1 samples, 0.03%)</title><rect x="44.1256%" y="149" width="0.0271%" height="15" fill="rgb(221,200,47)" fg:x="1630" fg:w="1"/><text x="44.3756%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125c2d (2 samples, 0.05%)</title><rect x="44.1527%" y="149" width="0.0541%" height="15" fill="rgb(226,26,5)" fg:x="1631" fg:w="2"/><text x="44.4027%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466ad (1 samples, 0.03%)</title><rect x="44.2068%" y="149" width="0.0271%" height="15" fill="rgb(249,33,26)" fg:x="1633" fg:w="1"/><text x="44.4568%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467de (3 samples, 0.08%)</title><rect x="44.2339%" y="149" width="0.0812%" height="15" fill="rgb(235,183,28)" fg:x="1634" fg:w="3"/><text x="44.4839%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467e0 (1 samples, 0.03%)</title><rect x="44.3151%" y="149" width="0.0271%" height="15" fill="rgb(221,5,38)" fg:x="1637" fg:w="1"/><text x="44.5651%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146873 (1 samples, 0.03%)</title><rect x="44.3422%" y="149" width="0.0271%" height="15" fill="rgb(247,18,42)" fg:x="1638" fg:w="1"/><text x="44.5922%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146895 (1 samples, 0.03%)</title><rect x="44.3692%" y="149" width="0.0271%" height="15" fill="rgb(241,131,45)" fg:x="1639" fg:w="1"/><text x="44.6192%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468aa (3 samples, 0.08%)</title><rect x="44.3963%" y="149" width="0.0812%" height="15" fill="rgb(249,31,29)" fg:x="1640" fg:w="3"/><text x="44.6463%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.08%)</title><rect x="44.3963%" y="133" width="0.0812%" height="15" fill="rgb(225,111,53)" fg:x="1640" fg:w="3"/><text x="44.6463%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468c0 (1 samples, 0.03%)</title><rect x="44.4775%" y="149" width="0.0271%" height="15" fill="rgb(238,160,17)" fg:x="1643" fg:w="1"/><text x="44.7275%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468cd (1 samples, 0.03%)</title><rect x="44.5046%" y="149" width="0.0271%" height="15" fill="rgb(214,148,48)" fg:x="1644" fg:w="1"/><text x="44.7546%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146933 (1 samples, 0.03%)</title><rect x="44.5317%" y="149" width="0.0271%" height="15" fill="rgb(232,36,49)" fg:x="1645" fg:w="1"/><text x="44.7817%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914694d (1 samples, 0.03%)</title><rect x="44.5587%" y="149" width="0.0271%" height="15" fill="rgb(209,103,24)" fg:x="1646" fg:w="1"/><text x="44.8087%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146962 (1 samples, 0.03%)</title><rect x="44.5858%" y="149" width="0.0271%" height="15" fill="rgb(229,88,8)" fg:x="1647" fg:w="1"/><text x="44.8358%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191469ba (1 samples, 0.03%)</title><rect x="44.6129%" y="149" width="0.0271%" height="15" fill="rgb(213,181,19)" fg:x="1648" fg:w="1"/><text x="44.8629%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f64c (1 samples, 0.03%)</title><rect x="44.6400%" y="149" width="0.0271%" height="15" fill="rgb(254,191,54)" fg:x="1649" fg:w="1"/><text x="44.8900%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f660 (2 samples, 0.05%)</title><rect x="44.6670%" y="149" width="0.0541%" height="15" fill="rgb(241,83,37)" fg:x="1650" fg:w="2"/><text x="44.9170%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f68d (1 samples, 0.03%)</title><rect x="44.7212%" y="149" width="0.0271%" height="15" fill="rgb(233,36,39)" fg:x="1652" fg:w="1"/><text x="44.9712%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500eb (1 samples, 0.03%)</title><rect x="44.7482%" y="149" width="0.0271%" height="15" fill="rgb(226,3,54)" fg:x="1653" fg:w="1"/><text x="44.9982%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500f7 (1 samples, 0.03%)</title><rect x="44.7753%" y="149" width="0.0271%" height="15" fill="rgb(245,192,40)" fg:x="1654" fg:w="1"/><text x="45.0253%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150105 (1 samples, 0.03%)</title><rect x="44.8024%" y="149" width="0.0271%" height="15" fill="rgb(238,167,29)" fg:x="1655" fg:w="1"/><text x="45.0524%" y="159.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.03%)</title><rect x="44.8295%" y="149" width="0.0271%" height="15" fill="rgb(232,182,51)" fg:x="1656" fg:w="1"/><text x="45.0795%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (17 samples, 0.46%)</title><rect x="44.8565%" y="149" width="0.4602%" height="15" fill="rgb(231,60,39)" fg:x="1657" fg:w="17"/><text x="45.1065%" y="159.50"></text></g><g><title>redirs`&lt;alloc::string::String as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (1 samples, 0.03%)</title><rect x="45.3167%" y="149" width="0.0271%" height="15" fill="rgb(208,69,12)" fg:x="1674" fg:w="1"/><text x="45.5667%" y="159.50"></text></g><g><title>redirs`&lt;alloc::vec::Vec&lt;u8&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.03%)</title><rect x="45.3438%" y="149" width="0.0271%" height="15" fill="rgb(235,93,37)" fg:x="1675" fg:w="1"/><text x="45.5938%" y="159.50"></text></g><g><title>redirs`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (3 samples, 0.08%)</title><rect x="45.3709%" y="149" width="0.0812%" height="15" fill="rgb(213,116,39)" fg:x="1676" fg:w="3"/><text x="45.6209%" y="159.50"></text></g><g><title>redirs`DYLD-STUB$$free (1 samples, 0.03%)</title><rect x="45.4521%" y="149" width="0.0271%" height="15" fill="rgb(222,207,29)" fg:x="1679" fg:w="1"/><text x="45.7021%" y="159.50"></text></g><g><title>redirs`DYLD-STUB$$malloc (3 samples, 0.08%)</title><rect x="45.4792%" y="149" width="0.0812%" height="15" fill="rgb(206,96,30)" fg:x="1680" fg:w="3"/><text x="45.7292%" y="159.50"></text></g><g><title>redirs`__rdl_alloc (7 samples, 0.19%)</title><rect x="45.5604%" y="149" width="0.1895%" height="15" fill="rgb(218,138,4)" fg:x="1683" fg:w="7"/><text x="45.8104%" y="159.50"></text></g><g><title>redirs`__rdl_dealloc (1 samples, 0.03%)</title><rect x="45.7499%" y="149" width="0.0271%" height="15" fill="rgb(250,191,14)" fg:x="1690" fg:w="1"/><text x="45.9999%" y="159.50"></text></g><g><title>redirs`__rust_dealloc (1 samples, 0.03%)</title><rect x="45.7769%" y="149" width="0.0271%" height="15" fill="rgb(239,60,40)" fg:x="1691" fg:w="1"/><text x="46.0269%" y="159.50"></text></g><g><title>redirs`alloc::str::_&lt;impl str&gt;::to_lowercase (2 samples, 0.05%)</title><rect x="45.8040%" y="149" width="0.0541%" height="15" fill="rgb(206,27,48)" fg:x="1692" fg:w="2"/><text x="46.0540%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466aa (1 samples, 0.03%)</title><rect x="45.9394%" y="133" width="0.0271%" height="15" fill="rgb(225,35,8)" fg:x="1697" fg:w="1"/><text x="46.1894%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467aa (1 samples, 0.03%)</title><rect x="45.9664%" y="133" width="0.0271%" height="15" fill="rgb(250,213,24)" fg:x="1698" fg:w="1"/><text x="46.2164%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467b5 (1 samples, 0.03%)</title><rect x="45.9935%" y="133" width="0.0271%" height="15" fill="rgb(247,123,22)" fg:x="1699" fg:w="1"/><text x="46.2435%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467de (1 samples, 0.03%)</title><rect x="46.0206%" y="133" width="0.0271%" height="15" fill="rgb(231,138,38)" fg:x="1700" fg:w="1"/><text x="46.2706%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146822 (1 samples, 0.03%)</title><rect x="46.0476%" y="133" width="0.0271%" height="15" fill="rgb(231,145,46)" fg:x="1701" fg:w="1"/><text x="46.2976%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146873 (1 samples, 0.03%)</title><rect x="46.0747%" y="133" width="0.0271%" height="15" fill="rgb(251,118,11)" fg:x="1702" fg:w="1"/><text x="46.3247%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146895 (1 samples, 0.03%)</title><rect x="46.1018%" y="133" width="0.0271%" height="15" fill="rgb(217,147,25)" fg:x="1703" fg:w="1"/><text x="46.3518%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468ca (1 samples, 0.03%)</title><rect x="46.1289%" y="133" width="0.0271%" height="15" fill="rgb(247,81,37)" fg:x="1704" fg:w="1"/><text x="46.3789%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146962 (1 samples, 0.03%)</title><rect x="46.1559%" y="133" width="0.0271%" height="15" fill="rgb(209,12,38)" fg:x="1705" fg:w="1"/><text x="46.4059%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914697d (1 samples, 0.03%)</title><rect x="46.1830%" y="133" width="0.0271%" height="15" fill="rgb(227,1,9)" fg:x="1706" fg:w="1"/><text x="46.4330%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (3 samples, 0.08%)</title><rect x="46.2101%" y="133" width="0.0812%" height="15" fill="rgb(248,47,43)" fg:x="1707" fg:w="3"/><text x="46.4601%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191469ba (2 samples, 0.05%)</title><rect x="46.2913%" y="133" width="0.0541%" height="15" fill="rgb(221,10,30)" fg:x="1710" fg:w="2"/><text x="46.5413%" y="143.50"></text></g><g><title>redirs`core::ptr::drop_in_place&lt;redirs::message::message::Message&gt; (25 samples, 0.68%)</title><rect x="45.8581%" y="149" width="0.6768%" height="15" fill="rgb(210,229,1)" fg:x="1694" fg:w="25"/><text x="46.1081%" y="159.50"></text></g><g><title>redirs`core::ptr::drop_in_place&lt;redirs::message::message::Message&gt; (7 samples, 0.19%)</title><rect x="46.3454%" y="133" width="0.1895%" height="15" fill="rgb(222,148,37)" fg:x="1712" fg:w="7"/><text x="46.5954%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251c7 (1 samples, 0.03%)</title><rect x="46.5891%" y="133" width="0.0271%" height="15" fill="rgb(234,67,33)" fg:x="1721" fg:w="1"/><text x="46.8391%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912520b (1 samples, 0.03%)</title><rect x="46.6161%" y="133" width="0.0271%" height="15" fill="rgb(247,98,35)" fg:x="1722" fg:w="1"/><text x="46.8661%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125321 (1 samples, 0.03%)</title><rect x="46.6432%" y="133" width="0.0271%" height="15" fill="rgb(247,138,52)" fg:x="1723" fg:w="1"/><text x="46.8932%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466ff (1 samples, 0.03%)</title><rect x="46.6703%" y="133" width="0.0271%" height="15" fill="rgb(213,79,30)" fg:x="1724" fg:w="1"/><text x="46.9203%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467de (1 samples, 0.03%)</title><rect x="46.6973%" y="133" width="0.0271%" height="15" fill="rgb(246,177,23)" fg:x="1725" fg:w="1"/><text x="46.9473%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (7 samples, 0.19%)</title><rect x="46.7244%" y="133" width="0.1895%" height="15" fill="rgb(230,62,27)" fg:x="1726" fg:w="7"/><text x="46.9744%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (2 samples, 0.05%)</title><rect x="46.9410%" y="117" width="0.0541%" height="15" fill="rgb(216,154,8)" fg:x="1734" fg:w="2"/><text x="47.1910%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252a9 (1 samples, 0.03%)</title><rect x="46.9951%" y="117" width="0.0271%" height="15" fill="rgb(244,35,45)" fg:x="1736" fg:w="1"/><text x="47.2451%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125308 (1 samples, 0.03%)</title><rect x="47.0222%" y="117" width="0.0271%" height="15" fill="rgb(251,115,12)" fg:x="1737" fg:w="1"/><text x="47.2722%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912531a (1 samples, 0.03%)</title><rect x="47.0493%" y="117" width="0.0271%" height="15" fill="rgb(240,54,50)" fg:x="1738" fg:w="1"/><text x="47.2993%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532a (1 samples, 0.03%)</title><rect x="47.0763%" y="117" width="0.0271%" height="15" fill="rgb(233,84,52)" fg:x="1739" fg:w="1"/><text x="47.3263%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (1 samples, 0.03%)</title><rect x="47.1034%" y="117" width="0.0271%" height="15" fill="rgb(207,117,47)" fg:x="1740" fg:w="1"/><text x="47.3534%" y="127.50"></text></g><g><title>redirs`&lt;alloc::vec::Vec&lt;u8&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (9 samples, 0.24%)</title><rect x="46.9139%" y="133" width="0.2436%" height="15" fill="rgb(249,43,39)" fg:x="1733" fg:w="9"/><text x="47.1639%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="47.1305%" y="117" width="0.0271%" height="15" fill="rgb(209,38,44)" fg:x="1741" fg:w="1"/><text x="47.3805%" y="127.50"></text></g><g><title>redirs`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (11 samples, 0.30%)</title><rect x="47.1576%" y="133" width="0.2978%" height="15" fill="rgb(236,212,23)" fg:x="1742" fg:w="11"/><text x="47.4076%" y="143.50"></text></g><g><title>redirs`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="47.4283%" y="117" width="0.0271%" height="15" fill="rgb(242,79,21)" fg:x="1752" fg:w="1"/><text x="47.6783%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467e0 (1 samples, 0.03%)</title><rect x="47.9697%" y="117" width="0.0271%" height="15" fill="rgb(211,96,35)" fg:x="1772" fg:w="1"/><text x="48.2197%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (1 samples, 0.03%)</title><rect x="47.9968%" y="117" width="0.0271%" height="15" fill="rgb(253,215,40)" fg:x="1773" fg:w="1"/><text x="48.2468%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (3 samples, 0.08%)</title><rect x="48.0238%" y="117" width="0.0812%" height="15" fill="rgb(211,81,21)" fg:x="1774" fg:w="3"/><text x="48.2738%" y="127.50"></text></g><g><title>redirs`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (25 samples, 0.68%)</title><rect x="47.4553%" y="133" width="0.6768%" height="15" fill="rgb(208,190,38)" fg:x="1753" fg:w="25"/><text x="47.7053%" y="143.50"></text></g><g><title>redirs`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="48.1050%" y="117" width="0.0271%" height="15" fill="rgb(235,213,38)" fg:x="1777" fg:w="1"/><text x="48.3550%" y="127.50"></text></g><g><title>redirs`redirs::command::handle_command (61 samples, 1.65%)</title><rect x="46.5349%" y="149" width="1.6513%" height="15" fill="rgb(237,122,38)" fg:x="1719" fg:w="61"/><text x="46.7849%" y="159.50"></text></g><g><title>redirs`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="48.1321%" y="133" width="0.0541%" height="15" fill="rgb(244,218,35)" fg:x="1778" fg:w="2"/><text x="48.3821%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125170 (1 samples, 0.03%)</title><rect x="48.3216%" y="133" width="0.0271%" height="15" fill="rgb(240,68,47)" fg:x="1785" fg:w="1"/><text x="48.5716%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125c2d (1 samples, 0.03%)</title><rect x="48.3487%" y="133" width="0.0271%" height="15" fill="rgb(210,16,53)" fg:x="1786" fg:w="1"/><text x="48.5987%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466a8 (1 samples, 0.03%)</title><rect x="48.3757%" y="133" width="0.0271%" height="15" fill="rgb(235,124,12)" fg:x="1787" fg:w="1"/><text x="48.6257%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466aa (1 samples, 0.03%)</title><rect x="48.4028%" y="133" width="0.0271%" height="15" fill="rgb(224,169,11)" fg:x="1788" fg:w="1"/><text x="48.6528%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466ad (1 samples, 0.03%)</title><rect x="48.4299%" y="133" width="0.0271%" height="15" fill="rgb(250,166,2)" fg:x="1789" fg:w="1"/><text x="48.6799%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466b6 (1 samples, 0.03%)</title><rect x="48.4570%" y="133" width="0.0271%" height="15" fill="rgb(242,216,29)" fg:x="1790" fg:w="1"/><text x="48.7070%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467da (1 samples, 0.03%)</title><rect x="48.4840%" y="133" width="0.0271%" height="15" fill="rgb(230,116,27)" fg:x="1791" fg:w="1"/><text x="48.7340%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467e0 (2 samples, 0.05%)</title><rect x="48.5111%" y="133" width="0.0541%" height="15" fill="rgb(228,99,48)" fg:x="1792" fg:w="2"/><text x="48.7611%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467ee (1 samples, 0.03%)</title><rect x="48.5652%" y="133" width="0.0271%" height="15" fill="rgb(253,11,6)" fg:x="1794" fg:w="1"/><text x="48.8152%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467f2 (2 samples, 0.05%)</title><rect x="48.5923%" y="133" width="0.0541%" height="15" fill="rgb(247,143,39)" fg:x="1795" fg:w="2"/><text x="48.8423%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467fa (1 samples, 0.03%)</title><rect x="48.6465%" y="133" width="0.0271%" height="15" fill="rgb(236,97,10)" fg:x="1797" fg:w="1"/><text x="48.8965%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146802 (2 samples, 0.05%)</title><rect x="48.6735%" y="133" width="0.0541%" height="15" fill="rgb(233,208,19)" fg:x="1798" fg:w="2"/><text x="48.9235%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146839 (1 samples, 0.03%)</title><rect x="48.7277%" y="133" width="0.0271%" height="15" fill="rgb(216,164,2)" fg:x="1800" fg:w="1"/><text x="48.9777%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146843 (4 samples, 0.11%)</title><rect x="48.7547%" y="133" width="0.1083%" height="15" fill="rgb(220,129,5)" fg:x="1801" fg:w="4"/><text x="49.0047%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468aa (2 samples, 0.05%)</title><rect x="48.8630%" y="133" width="0.0541%" height="15" fill="rgb(242,17,10)" fg:x="1805" fg:w="2"/><text x="49.1130%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.05%)</title><rect x="48.8630%" y="117" width="0.0541%" height="15" fill="rgb(242,107,0)" fg:x="1805" fg:w="2"/><text x="49.1130%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468b1 (2 samples, 0.05%)</title><rect x="48.9172%" y="133" width="0.0541%" height="15" fill="rgb(251,28,31)" fg:x="1807" fg:w="2"/><text x="49.1672%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468bc (1 samples, 0.03%)</title><rect x="48.9713%" y="133" width="0.0271%" height="15" fill="rgb(233,223,10)" fg:x="1809" fg:w="1"/><text x="49.2213%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468ca (1 samples, 0.03%)</title><rect x="48.9984%" y="133" width="0.0271%" height="15" fill="rgb(215,21,27)" fg:x="1810" fg:w="1"/><text x="49.2484%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914691f (1 samples, 0.03%)</title><rect x="49.0254%" y="133" width="0.0271%" height="15" fill="rgb(232,23,21)" fg:x="1811" fg:w="1"/><text x="49.2754%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914694d (1 samples, 0.03%)</title><rect x="49.0525%" y="133" width="0.0271%" height="15" fill="rgb(244,5,23)" fg:x="1812" fg:w="1"/><text x="49.3025%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146960 (2 samples, 0.05%)</title><rect x="49.0796%" y="133" width="0.0541%" height="15" fill="rgb(226,81,46)" fg:x="1813" fg:w="2"/><text x="49.3296%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (8 samples, 0.22%)</title><rect x="49.1337%" y="133" width="0.2166%" height="15" fill="rgb(247,70,30)" fg:x="1815" fg:w="8"/><text x="49.3837%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191469ba (1 samples, 0.03%)</title><rect x="49.3503%" y="133" width="0.0271%" height="15" fill="rgb(212,68,19)" fg:x="1823" fg:w="1"/><text x="49.6003%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146a0d (1 samples, 0.03%)</title><rect x="49.3774%" y="133" width="0.0271%" height="15" fill="rgb(240,187,13)" fg:x="1824" fg:w="1"/><text x="49.6274%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f654 (1 samples, 0.03%)</title><rect x="49.4044%" y="133" width="0.0271%" height="15" fill="rgb(223,113,26)" fg:x="1825" fg:w="1"/><text x="49.6544%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f656 (2 samples, 0.05%)</title><rect x="49.4315%" y="133" width="0.0541%" height="15" fill="rgb(206,192,2)" fg:x="1826" fg:w="2"/><text x="49.6815%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f660 (2 samples, 0.05%)</title><rect x="49.4857%" y="133" width="0.0541%" height="15" fill="rgb(241,108,4)" fg:x="1828" fg:w="2"/><text x="49.7357%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f677 (1 samples, 0.03%)</title><rect x="49.5398%" y="133" width="0.0271%" height="15" fill="rgb(247,173,49)" fg:x="1830" fg:w="1"/><text x="49.7898%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f679 (1 samples, 0.03%)</title><rect x="49.5669%" y="133" width="0.0271%" height="15" fill="rgb(224,114,35)" fg:x="1831" fg:w="1"/><text x="49.8169%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500eb (1 samples, 0.03%)</title><rect x="49.5939%" y="133" width="0.0271%" height="15" fill="rgb(245,159,27)" fg:x="1832" fg:w="1"/><text x="49.8439%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500f5 (1 samples, 0.03%)</title><rect x="49.6210%" y="133" width="0.0271%" height="15" fill="rgb(245,172,44)" fg:x="1833" fg:w="1"/><text x="49.8710%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500f7 (1 samples, 0.03%)</title><rect x="49.6481%" y="133" width="0.0271%" height="15" fill="rgb(236,23,11)" fg:x="1834" fg:w="1"/><text x="49.8981%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150105 (3 samples, 0.08%)</title><rect x="49.6751%" y="133" width="0.0812%" height="15" fill="rgb(205,117,38)" fg:x="1835" fg:w="3"/><text x="49.9251%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819156a94 (1 samples, 0.03%)</title><rect x="49.7564%" y="133" width="0.0271%" height="15" fill="rgb(237,72,25)" fg:x="1838" fg:w="1"/><text x="50.0064%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="49.7834%" y="133" width="0.0271%" height="15" fill="rgb(244,70,9)" fg:x="1839" fg:w="1"/><text x="50.0334%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251f3 (1 samples, 0.03%)</title><rect x="49.9459%" y="117" width="0.0271%" height="15" fill="rgb(217,125,39)" fg:x="1845" fg:w="1"/><text x="50.1959%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251fd (1 samples, 0.03%)</title><rect x="49.9729%" y="117" width="0.0271%" height="15" fill="rgb(235,36,10)" fg:x="1846" fg:w="1"/><text x="50.2229%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (2 samples, 0.05%)</title><rect x="50.0000%" y="117" width="0.0541%" height="15" fill="rgb(251,123,47)" fg:x="1847" fg:w="2"/><text x="50.2500%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912520b (3 samples, 0.08%)</title><rect x="50.0541%" y="117" width="0.0812%" height="15" fill="rgb(221,13,13)" fg:x="1849" fg:w="3"/><text x="50.3041%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125233 (1 samples, 0.03%)</title><rect x="50.1354%" y="117" width="0.0271%" height="15" fill="rgb(238,131,9)" fg:x="1852" fg:w="1"/><text x="50.3854%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (2 samples, 0.05%)</title><rect x="50.1624%" y="117" width="0.0541%" height="15" fill="rgb(211,50,8)" fg:x="1853" fg:w="2"/><text x="50.4124%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912525b (1 samples, 0.03%)</title><rect x="50.2166%" y="117" width="0.0271%" height="15" fill="rgb(245,182,24)" fg:x="1855" fg:w="1"/><text x="50.4666%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912528f (1 samples, 0.03%)</title><rect x="50.2436%" y="117" width="0.0271%" height="15" fill="rgb(242,14,37)" fg:x="1856" fg:w="1"/><text x="50.4936%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252ee (2 samples, 0.05%)</title><rect x="50.2707%" y="117" width="0.0541%" height="15" fill="rgb(246,228,12)" fg:x="1857" fg:w="2"/><text x="50.5207%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125302 (1 samples, 0.03%)</title><rect x="50.3249%" y="117" width="0.0271%" height="15" fill="rgb(213,55,15)" fg:x="1859" fg:w="1"/><text x="50.5749%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (1 samples, 0.03%)</title><rect x="50.3519%" y="117" width="0.0271%" height="15" fill="rgb(209,9,3)" fg:x="1860" fg:w="1"/><text x="50.6019%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912531a (1 samples, 0.03%)</title><rect x="50.3790%" y="117" width="0.0271%" height="15" fill="rgb(230,59,30)" fg:x="1861" fg:w="1"/><text x="50.6290%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125324 (1 samples, 0.03%)</title><rect x="50.4061%" y="117" width="0.0271%" height="15" fill="rgb(209,121,21)" fg:x="1862" fg:w="1"/><text x="50.6561%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (3 samples, 0.08%)</title><rect x="50.4331%" y="117" width="0.0812%" height="15" fill="rgb(220,109,13)" fg:x="1863" fg:w="3"/><text x="50.6831%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253d1 (1 samples, 0.03%)</title><rect x="50.5143%" y="117" width="0.0271%" height="15" fill="rgb(232,18,1)" fg:x="1866" fg:w="1"/><text x="50.7643%" y="127.50"></text></g><g><title>redirs`&lt;alloc::string::String as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (28 samples, 0.76%)</title><rect x="49.8105%" y="133" width="0.7580%" height="15" fill="rgb(215,41,42)" fg:x="1840" fg:w="28"/><text x="50.0605%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (1 samples, 0.03%)</title><rect x="50.5414%" y="117" width="0.0271%" height="15" fill="rgb(224,123,36)" fg:x="1867" fg:w="1"/><text x="50.7914%" y="127.50"></text></g><g><title>redirs`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="50.5685%" y="133" width="0.0271%" height="15" fill="rgb(240,125,3)" fg:x="1868" fg:w="1"/><text x="50.8185%" y="143.50"></text></g><g><title>redirs`DYLD-STUB$$memcpy (2 samples, 0.05%)</title><rect x="50.5956%" y="133" width="0.0541%" height="15" fill="rgb(205,98,50)" fg:x="1869" fg:w="2"/><text x="50.8456%" y="143.50"></text></g><g><title>redirs`__rdl_alloc (1 samples, 0.03%)</title><rect x="50.6497%" y="133" width="0.0271%" height="15" fill="rgb(205,185,37)" fg:x="1871" fg:w="1"/><text x="50.8997%" y="143.50"></text></g><g><title>redirs`__rdl_dealloc (1 samples, 0.03%)</title><rect x="50.6768%" y="133" width="0.0271%" height="15" fill="rgb(238,207,15)" fg:x="1872" fg:w="1"/><text x="50.9268%" y="143.50"></text></g><g><title>redirs`__rust_dealloc (1 samples, 0.03%)</title><rect x="50.7038%" y="133" width="0.0271%" height="15" fill="rgb(213,199,42)" fg:x="1873" fg:w="1"/><text x="50.9538%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (2 samples, 0.05%)</title><rect x="50.7580%" y="117" width="0.0541%" height="15" fill="rgb(235,201,11)" fg:x="1875" fg:w="2"/><text x="51.0080%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912520b (1 samples, 0.03%)</title><rect x="50.8121%" y="117" width="0.0271%" height="15" fill="rgb(207,46,11)" fg:x="1877" fg:w="1"/><text x="51.0621%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125233 (1 samples, 0.03%)</title><rect x="50.8392%" y="117" width="0.0271%" height="15" fill="rgb(241,35,35)" fg:x="1878" fg:w="1"/><text x="51.0892%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523d (1 samples, 0.03%)</title><rect x="50.8663%" y="117" width="0.0271%" height="15" fill="rgb(243,32,47)" fg:x="1879" fg:w="1"/><text x="51.1163%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125262 (1 samples, 0.03%)</title><rect x="50.8933%" y="117" width="0.0271%" height="15" fill="rgb(247,202,23)" fg:x="1880" fg:w="1"/><text x="51.1433%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (1 samples, 0.03%)</title><rect x="50.9204%" y="117" width="0.0271%" height="15" fill="rgb(219,102,11)" fg:x="1881" fg:w="1"/><text x="51.1704%" y="127.50"></text></g><g><title>redirs`alloc::str::_&lt;impl str&gt;::to_lowercase (9 samples, 0.24%)</title><rect x="50.7309%" y="133" width="0.2436%" height="15" fill="rgb(243,110,44)" fg:x="1874" fg:w="9"/><text x="50.9809%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (1 samples, 0.03%)</title><rect x="50.9475%" y="117" width="0.0271%" height="15" fill="rgb(222,74,54)" fg:x="1882" fg:w="1"/><text x="51.1975%" y="127.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (25 samples, 0.68%)</title><rect x="50.9746%" y="133" width="0.6768%" height="15" fill="rgb(216,99,12)" fg:x="1883" fg:w="25"/><text x="51.2246%" y="143.50"></text></g><g><title>redirs`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.62%)</title><rect x="51.0287%" y="117" width="0.6226%" height="15" fill="rgb(226,22,26)" fg:x="1885" fg:w="23"/><text x="51.2787%" y="127.50"></text></g><g><title>redirs`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.05%)</title><rect x="51.6513%" y="133" width="0.0541%" height="15" fill="rgb(217,163,10)" fg:x="1908" fg:w="2"/><text x="51.9013%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125170 (1 samples, 0.03%)</title><rect x="52.2469%" y="117" width="0.0271%" height="15" fill="rgb(213,25,53)" fg:x="1930" fg:w="1"/><text x="52.4969%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912517a (1 samples, 0.03%)</title><rect x="52.2740%" y="117" width="0.0271%" height="15" fill="rgb(252,105,26)" fg:x="1931" fg:w="1"/><text x="52.5240%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253df (1 samples, 0.03%)</title><rect x="52.3010%" y="117" width="0.0271%" height="15" fill="rgb(220,39,43)" fg:x="1932" fg:w="1"/><text x="52.5510%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466a0 (1 samples, 0.03%)</title><rect x="52.3281%" y="117" width="0.0271%" height="15" fill="rgb(229,68,48)" fg:x="1933" fg:w="1"/><text x="52.5781%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466a8 (1 samples, 0.03%)</title><rect x="52.3552%" y="117" width="0.0271%" height="15" fill="rgb(252,8,32)" fg:x="1934" fg:w="1"/><text x="52.6052%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466c9 (1 samples, 0.03%)</title><rect x="52.3822%" y="117" width="0.0271%" height="15" fill="rgb(223,20,43)" fg:x="1935" fg:w="1"/><text x="52.6322%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467b5 (3 samples, 0.08%)</title><rect x="52.4093%" y="117" width="0.0812%" height="15" fill="rgb(229,81,49)" fg:x="1936" fg:w="3"/><text x="52.6593%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467b8 (1 samples, 0.03%)</title><rect x="52.4905%" y="117" width="0.0271%" height="15" fill="rgb(236,28,36)" fg:x="1939" fg:w="1"/><text x="52.7405%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467c6 (1 samples, 0.03%)</title><rect x="52.5176%" y="117" width="0.0271%" height="15" fill="rgb(249,185,26)" fg:x="1940" fg:w="1"/><text x="52.7676%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467d0 (1 samples, 0.03%)</title><rect x="52.5447%" y="117" width="0.0271%" height="15" fill="rgb(249,174,33)" fg:x="1941" fg:w="1"/><text x="52.7947%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467da (1 samples, 0.03%)</title><rect x="52.5717%" y="117" width="0.0271%" height="15" fill="rgb(233,201,37)" fg:x="1942" fg:w="1"/><text x="52.8217%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467de (1 samples, 0.03%)</title><rect x="52.5988%" y="117" width="0.0271%" height="15" fill="rgb(221,78,26)" fg:x="1943" fg:w="1"/><text x="52.8488%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467e0 (2 samples, 0.05%)</title><rect x="52.6259%" y="117" width="0.0541%" height="15" fill="rgb(250,127,30)" fg:x="1944" fg:w="2"/><text x="52.8759%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467ee (1 samples, 0.03%)</title><rect x="52.6800%" y="117" width="0.0271%" height="15" fill="rgb(230,49,44)" fg:x="1946" fg:w="1"/><text x="52.9300%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467fa (1 samples, 0.03%)</title><rect x="52.7071%" y="117" width="0.0271%" height="15" fill="rgb(229,67,23)" fg:x="1947" fg:w="1"/><text x="52.9571%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146822 (2 samples, 0.05%)</title><rect x="52.7342%" y="117" width="0.0541%" height="15" fill="rgb(249,83,47)" fg:x="1948" fg:w="2"/><text x="52.9842%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914683e (1 samples, 0.03%)</title><rect x="52.7883%" y="117" width="0.0271%" height="15" fill="rgb(215,43,3)" fg:x="1950" fg:w="1"/><text x="53.0383%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146843 (7 samples, 0.19%)</title><rect x="52.8154%" y="117" width="0.1895%" height="15" fill="rgb(238,154,13)" fg:x="1951" fg:w="7"/><text x="53.0654%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146873 (5 samples, 0.14%)</title><rect x="53.0049%" y="117" width="0.1354%" height="15" fill="rgb(219,56,2)" fg:x="1958" fg:w="5"/><text x="53.2549%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146876 (1 samples, 0.03%)</title><rect x="53.1402%" y="117" width="0.0271%" height="15" fill="rgb(233,0,4)" fg:x="1963" fg:w="1"/><text x="53.3902%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146895 (1 samples, 0.03%)</title><rect x="53.1673%" y="117" width="0.0271%" height="15" fill="rgb(235,30,7)" fg:x="1964" fg:w="1"/><text x="53.4173%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468aa (2 samples, 0.05%)</title><rect x="53.1944%" y="117" width="0.0541%" height="15" fill="rgb(250,79,13)" fg:x="1965" fg:w="2"/><text x="53.4444%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.05%)</title><rect x="53.1944%" y="101" width="0.0541%" height="15" fill="rgb(211,146,34)" fg:x="1965" fg:w="2"/><text x="53.4444%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468ca (1 samples, 0.03%)</title><rect x="53.2485%" y="117" width="0.0271%" height="15" fill="rgb(228,22,38)" fg:x="1967" fg:w="1"/><text x="53.4985%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468dc (2 samples, 0.05%)</title><rect x="53.2756%" y="117" width="0.0541%" height="15" fill="rgb(235,168,5)" fg:x="1968" fg:w="2"/><text x="53.5256%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468fe (1 samples, 0.03%)</title><rect x="53.3297%" y="117" width="0.0271%" height="15" fill="rgb(221,155,16)" fg:x="1970" fg:w="1"/><text x="53.5797%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914694d (2 samples, 0.05%)</title><rect x="53.3568%" y="117" width="0.0541%" height="15" fill="rgb(215,215,53)" fg:x="1971" fg:w="2"/><text x="53.6068%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146960 (3 samples, 0.08%)</title><rect x="53.4109%" y="117" width="0.0812%" height="15" fill="rgb(223,4,10)" fg:x="1973" fg:w="3"/><text x="53.6609%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914696a (1 samples, 0.03%)</title><rect x="53.4921%" y="117" width="0.0271%" height="15" fill="rgb(234,103,6)" fg:x="1976" fg:w="1"/><text x="53.7421%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (7 samples, 0.19%)</title><rect x="53.5192%" y="117" width="0.1895%" height="15" fill="rgb(227,97,0)" fg:x="1977" fg:w="7"/><text x="53.7692%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191469ba (4 samples, 0.11%)</title><rect x="53.7087%" y="117" width="0.1083%" height="15" fill="rgb(234,150,53)" fg:x="1984" fg:w="4"/><text x="53.9587%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146a11 (1 samples, 0.03%)</title><rect x="53.8170%" y="117" width="0.0271%" height="15" fill="rgb(228,201,54)" fg:x="1988" fg:w="1"/><text x="54.0670%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f64a (1 samples, 0.03%)</title><rect x="53.8441%" y="117" width="0.0271%" height="15" fill="rgb(222,22,37)" fg:x="1989" fg:w="1"/><text x="54.0941%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f667 (1 samples, 0.03%)</title><rect x="53.8711%" y="117" width="0.0271%" height="15" fill="rgb(237,53,32)" fg:x="1990" fg:w="1"/><text x="54.1211%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f669 (1 samples, 0.03%)</title><rect x="53.8982%" y="117" width="0.0271%" height="15" fill="rgb(233,25,53)" fg:x="1991" fg:w="1"/><text x="54.1482%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f679 (2 samples, 0.05%)</title><rect x="53.9253%" y="117" width="0.0541%" height="15" fill="rgb(210,40,34)" fg:x="1992" fg:w="2"/><text x="54.1753%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f682 (2 samples, 0.05%)</title><rect x="53.9794%" y="117" width="0.0541%" height="15" fill="rgb(241,220,44)" fg:x="1994" fg:w="2"/><text x="54.2294%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500e1 (2 samples, 0.05%)</title><rect x="54.0336%" y="117" width="0.0541%" height="15" fill="rgb(235,28,35)" fg:x="1996" fg:w="2"/><text x="54.2836%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191500f5 (2 samples, 0.05%)</title><rect x="54.0877%" y="117" width="0.0541%" height="15" fill="rgb(210,56,17)" fg:x="1998" fg:w="2"/><text x="54.3377%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81915010e (2 samples, 0.05%)</title><rect x="54.1419%" y="117" width="0.0541%" height="15" fill="rgb(224,130,29)" fg:x="2000" fg:w="2"/><text x="54.3919%" y="127.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="54.1960%" y="117" width="0.0271%" height="15" fill="rgb(235,212,8)" fg:x="2002" fg:w="1"/><text x="54.4460%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.14%)</title><rect x="54.2231%" y="117" width="0.1354%" height="15" fill="rgb(223,33,50)" fg:x="2003" fg:w="5"/><text x="54.4731%" y="127.50"></text></g><g><title>redirs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="54.3584%" y="117" width="0.0271%" height="15" fill="rgb(219,149,13)" fg:x="2008" fg:w="1"/><text x="54.6084%" y="127.50"></text></g><g><title>redirs`DYLD-STUB$$free (1 samples, 0.03%)</title><rect x="54.3855%" y="117" width="0.0271%" height="15" fill="rgb(250,156,29)" fg:x="2009" fg:w="1"/><text x="54.6355%" y="127.50"></text></g><g><title>redirs`DYLD-STUB$$memcpy (3 samples, 0.08%)</title><rect x="54.4126%" y="117" width="0.0812%" height="15" fill="rgb(216,193,19)" fg:x="2010" fg:w="3"/><text x="54.6626%" y="127.50"></text></g><g><title>redirs`__rdl_dealloc (1 samples, 0.03%)</title><rect x="54.4938%" y="117" width="0.0271%" height="15" fill="rgb(216,135,14)" fg:x="2013" fg:w="1"/><text x="54.7438%" y="127.50"></text></g><g><title>redirs`__rust_alloc (1 samples, 0.03%)</title><rect x="54.5208%" y="117" width="0.0271%" height="15" fill="rgb(241,47,5)" fg:x="2014" fg:w="1"/><text x="54.7708%" y="127.50"></text></g><g><title>redirs`__rust_dealloc (1 samples, 0.03%)</title><rect x="54.5479%" y="117" width="0.0271%" height="15" fill="rgb(233,42,35)" fg:x="2015" fg:w="1"/><text x="54.7979%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f660 (1 samples, 0.03%)</title><rect x="54.6833%" y="101" width="0.0271%" height="15" fill="rgb(231,13,6)" fg:x="2020" fg:w="1"/><text x="54.9333%" y="111.50"></text></g><g><title>redirs`__rdl_alloc (1 samples, 0.03%)</title><rect x="54.7103%" y="101" width="0.0271%" height="15" fill="rgb(207,181,40)" fg:x="2021" fg:w="1"/><text x="54.9603%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251f3 (1 samples, 0.03%)</title><rect x="54.8186%" y="85" width="0.0271%" height="15" fill="rgb(254,173,49)" fg:x="2025" fg:w="1"/><text x="55.0686%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251f9 (2 samples, 0.05%)</title><rect x="54.8457%" y="85" width="0.0541%" height="15" fill="rgb(221,1,38)" fg:x="2026" fg:w="2"/><text x="55.0957%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251fd (2 samples, 0.05%)</title><rect x="54.8998%" y="85" width="0.0541%" height="15" fill="rgb(206,124,46)" fg:x="2028" fg:w="2"/><text x="55.1498%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (3 samples, 0.08%)</title><rect x="54.9540%" y="85" width="0.0812%" height="15" fill="rgb(249,21,11)" fg:x="2030" fg:w="3"/><text x="55.2040%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912520b (3 samples, 0.08%)</title><rect x="55.0352%" y="85" width="0.0812%" height="15" fill="rgb(222,201,40)" fg:x="2033" fg:w="3"/><text x="55.2852%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (2 samples, 0.05%)</title><rect x="55.1164%" y="85" width="0.0541%" height="15" fill="rgb(235,61,29)" fg:x="2036" fg:w="2"/><text x="55.3664%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912525b (1 samples, 0.03%)</title><rect x="55.1705%" y="85" width="0.0271%" height="15" fill="rgb(219,207,3)" fg:x="2038" fg:w="1"/><text x="55.4205%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252f9 (1 samples, 0.03%)</title><rect x="55.1976%" y="85" width="0.0271%" height="15" fill="rgb(222,56,46)" fg:x="2039" fg:w="1"/><text x="55.4476%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (1 samples, 0.03%)</title><rect x="55.2247%" y="85" width="0.0271%" height="15" fill="rgb(239,76,54)" fg:x="2040" fg:w="1"/><text x="55.4747%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (2 samples, 0.05%)</title><rect x="55.2518%" y="85" width="0.0541%" height="15" fill="rgb(231,124,27)" fg:x="2041" fg:w="2"/><text x="55.5018%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253da (1 samples, 0.03%)</title><rect x="55.3059%" y="85" width="0.0271%" height="15" fill="rgb(249,195,6)" fg:x="2043" fg:w="1"/><text x="55.5559%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (1 samples, 0.03%)</title><rect x="55.3330%" y="85" width="0.0271%" height="15" fill="rgb(237,174,47)" fg:x="2044" fg:w="1"/><text x="55.5830%" y="95.50"></text></g><g><title>redirs`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (30 samples, 0.81%)</title><rect x="54.5750%" y="117" width="0.8121%" height="15" fill="rgb(206,201,31)" fg:x="2016" fg:w="30"/><text x="54.8250%" y="127.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (24 samples, 0.65%)</title><rect x="54.7374%" y="101" width="0.6497%" height="15" fill="rgb(231,57,52)" fg:x="2022" fg:w="24"/><text x="54.9874%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e5 (1 samples, 0.03%)</title><rect x="55.3600%" y="85" width="0.0271%" height="15" fill="rgb(248,177,22)" fg:x="2045" fg:w="1"/><text x="55.6100%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819126e9d (2 samples, 0.05%)</title><rect x="55.5766%" y="101" width="0.0541%" height="15" fill="rgb(215,211,37)" fg:x="2053" fg:w="2"/><text x="55.8266%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150130 (2 samples, 0.05%)</title><rect x="55.6308%" y="101" width="0.0541%" height="15" fill="rgb(241,128,51)" fg:x="2055" fg:w="2"/><text x="55.8808%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150131 (2 samples, 0.05%)</title><rect x="55.6849%" y="101" width="0.0541%" height="15" fill="rgb(227,165,31)" fg:x="2057" fg:w="2"/><text x="55.9349%" y="111.50"></text></g><g><title>redirs`DYLD-STUB$$realloc (4 samples, 0.11%)</title><rect x="55.7390%" y="101" width="0.1083%" height="15" fill="rgb(228,167,24)" fg:x="2059" fg:w="4"/><text x="55.9890%" y="111.50"></text></g><g><title>redirs`__rdl_realloc (2 samples, 0.05%)</title><rect x="55.8473%" y="101" width="0.0541%" height="15" fill="rgb(228,143,12)" fg:x="2063" fg:w="2"/><text x="56.0973%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125c37 (2 samples, 0.05%)</title><rect x="56.1180%" y="85" width="0.0541%" height="15" fill="rgb(249,149,8)" fg:x="2073" fg:w="2"/><text x="56.3680%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125c6f (1 samples, 0.03%)</title><rect x="56.1722%" y="85" width="0.0271%" height="15" fill="rgb(243,35,44)" fg:x="2075" fg:w="1"/><text x="56.4222%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125d1f (1 samples, 0.03%)</title><rect x="56.1992%" y="85" width="0.0271%" height="15" fill="rgb(246,89,9)" fg:x="2076" fg:w="1"/><text x="56.4492%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125d2d (1 samples, 0.03%)</title><rect x="56.2263%" y="85" width="0.0271%" height="15" fill="rgb(233,213,13)" fg:x="2077" fg:w="1"/><text x="56.4763%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125d30 (1 samples, 0.03%)</title><rect x="56.2534%" y="85" width="0.0271%" height="15" fill="rgb(233,141,41)" fg:x="2078" fg:w="1"/><text x="56.5034%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125db2 (5 samples, 0.14%)</title><rect x="56.2805%" y="85" width="0.1354%" height="15" fill="rgb(239,167,4)" fg:x="2079" fg:w="5"/><text x="56.5305%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150136 (1 samples, 0.03%)</title><rect x="56.4158%" y="85" width="0.0271%" height="15" fill="rgb(209,217,16)" fg:x="2084" fg:w="1"/><text x="56.6658%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81915014e (1 samples, 0.03%)</title><rect x="56.4429%" y="85" width="0.0271%" height="15" fill="rgb(219,88,35)" fg:x="2085" fg:w="1"/><text x="56.6929%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819150155 (1 samples, 0.03%)</title><rect x="56.4700%" y="85" width="0.0271%" height="15" fill="rgb(220,193,23)" fg:x="2086" fg:w="1"/><text x="56.7200%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191501d2 (2 samples, 0.05%)</title><rect x="56.4970%" y="85" width="0.0541%" height="15" fill="rgb(230,90,52)" fg:x="2087" fg:w="2"/><text x="56.7470%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128352 (1 samples, 0.03%)</title><rect x="56.5512%" y="69" width="0.0271%" height="15" fill="rgb(252,106,19)" fg:x="2089" fg:w="1"/><text x="56.8012%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128368 (2 samples, 0.05%)</title><rect x="56.5782%" y="69" width="0.0541%" height="15" fill="rgb(206,74,20)" fg:x="2090" fg:w="2"/><text x="56.8282%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb57 (6 samples, 0.16%)</title><rect x="56.6324%" y="69" width="0.1624%" height="15" fill="rgb(230,138,44)" fg:x="2092" fg:w="6"/><text x="56.8824%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb5a (3 samples, 0.08%)</title><rect x="56.7948%" y="69" width="0.0812%" height="15" fill="rgb(235,182,43)" fg:x="2098" fg:w="3"/><text x="57.0448%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb91 (1 samples, 0.03%)</title><rect x="56.8760%" y="69" width="0.0271%" height="15" fill="rgb(242,16,51)" fg:x="2101" fg:w="1"/><text x="57.1260%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb9b (1 samples, 0.03%)</title><rect x="56.9031%" y="69" width="0.0271%" height="15" fill="rgb(248,9,4)" fg:x="2102" fg:w="1"/><text x="57.1531%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125e0a (1 samples, 0.03%)</title><rect x="56.9302%" y="53" width="0.0271%" height="15" fill="rgb(210,31,22)" fg:x="2103" fg:w="1"/><text x="57.1802%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125e1f (2 samples, 0.05%)</title><rect x="56.9572%" y="53" width="0.0541%" height="15" fill="rgb(239,54,39)" fg:x="2104" fg:w="2"/><text x="57.2072%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125ed5 (3 samples, 0.08%)</title><rect x="57.0114%" y="53" width="0.0812%" height="15" fill="rgb(230,99,41)" fg:x="2106" fg:w="3"/><text x="57.2614%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125efa (1 samples, 0.03%)</title><rect x="57.0926%" y="53" width="0.0271%" height="15" fill="rgb(253,106,12)" fg:x="2109" fg:w="1"/><text x="57.3426%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125efe (1 samples, 0.03%)</title><rect x="57.1197%" y="53" width="0.0271%" height="15" fill="rgb(213,46,41)" fg:x="2110" fg:w="1"/><text x="57.3697%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125f13 (1 samples, 0.03%)</title><rect x="57.1467%" y="53" width="0.0271%" height="15" fill="rgb(215,133,35)" fg:x="2111" fg:w="1"/><text x="57.3967%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125f7d (1 samples, 0.03%)</title><rect x="57.1738%" y="53" width="0.0271%" height="15" fill="rgb(213,28,5)" fg:x="2112" fg:w="1"/><text x="57.4238%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125f80 (3 samples, 0.08%)</title><rect x="57.2009%" y="53" width="0.0812%" height="15" fill="rgb(215,77,49)" fg:x="2113" fg:w="3"/><text x="57.4509%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125f89 (4 samples, 0.11%)</title><rect x="57.2821%" y="53" width="0.1083%" height="15" fill="rgb(248,100,22)" fg:x="2116" fg:w="4"/><text x="57.5321%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128389 (1 samples, 0.03%)</title><rect x="57.3904%" y="53" width="0.0271%" height="15" fill="rgb(208,67,9)" fg:x="2120" fg:w="1"/><text x="57.6404%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128396 (1 samples, 0.03%)</title><rect x="57.4174%" y="53" width="0.0271%" height="15" fill="rgb(219,133,21)" fg:x="2121" fg:w="1"/><text x="57.6674%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (7 samples, 0.19%)</title><rect x="57.4445%" y="37" width="0.1895%" height="15" fill="rgb(246,46,29)" fg:x="2122" fg:w="7"/><text x="57.6945%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912520b (1 samples, 0.03%)</title><rect x="57.6340%" y="37" width="0.0271%" height="15" fill="rgb(246,185,52)" fg:x="2129" fg:w="1"/><text x="57.8840%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (4 samples, 0.11%)</title><rect x="57.6611%" y="37" width="0.1083%" height="15" fill="rgb(252,136,11)" fg:x="2130" fg:w="4"/><text x="57.9111%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912522d (1 samples, 0.03%)</title><rect x="57.7694%" y="37" width="0.0271%" height="15" fill="rgb(219,138,53)" fg:x="2134" fg:w="1"/><text x="58.0194%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125233 (1 samples, 0.03%)</title><rect x="57.7964%" y="37" width="0.0271%" height="15" fill="rgb(211,51,23)" fg:x="2135" fg:w="1"/><text x="58.0464%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (12 samples, 0.32%)</title><rect x="57.8235%" y="37" width="0.3249%" height="15" fill="rgb(247,221,28)" fg:x="2136" fg:w="12"/><text x="58.0735%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912525e (1 samples, 0.03%)</title><rect x="58.1483%" y="37" width="0.0271%" height="15" fill="rgb(251,222,45)" fg:x="2148" fg:w="1"/><text x="58.3983%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252c7 (2 samples, 0.05%)</title><rect x="58.1754%" y="37" width="0.0541%" height="15" fill="rgb(217,162,53)" fg:x="2149" fg:w="2"/><text x="58.4254%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252ee (1 samples, 0.03%)</title><rect x="58.2296%" y="37" width="0.0271%" height="15" fill="rgb(229,93,14)" fg:x="2151" fg:w="1"/><text x="58.4796%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252f0 (1 samples, 0.03%)</title><rect x="58.2566%" y="37" width="0.0271%" height="15" fill="rgb(209,67,49)" fg:x="2152" fg:w="1"/><text x="58.5066%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (2 samples, 0.05%)</title><rect x="58.2837%" y="37" width="0.0541%" height="15" fill="rgb(213,87,29)" fg:x="2153" fg:w="2"/><text x="58.5337%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (5 samples, 0.14%)</title><rect x="58.3378%" y="37" width="0.1354%" height="15" fill="rgb(205,151,52)" fg:x="2155" fg:w="5"/><text x="58.5878%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912846b (40 samples, 1.08%)</title><rect x="57.4445%" y="53" width="1.0828%" height="15" fill="rgb(253,215,39)" fg:x="2122" fg:w="40"/><text x="57.6945%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253ff (2 samples, 0.05%)</title><rect x="58.4732%" y="37" width="0.0541%" height="15" fill="rgb(221,220,41)" fg:x="2160" fg:w="2"/><text x="58.7232%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128488 (1 samples, 0.03%)</title><rect x="58.5273%" y="53" width="0.0271%" height="15" fill="rgb(218,133,21)" fg:x="2162" fg:w="1"/><text x="58.7773%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="58.5273%" y="37" width="0.0271%" height="15" fill="rgb(221,193,43)" fg:x="2162" fg:w="1"/><text x="58.7773%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467a5 (1 samples, 0.03%)</title><rect x="58.5544%" y="37" width="0.0271%" height="15" fill="rgb(240,128,52)" fg:x="2163" fg:w="1"/><text x="58.8044%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914683e (1 samples, 0.03%)</title><rect x="58.5815%" y="37" width="0.0271%" height="15" fill="rgb(253,114,12)" fg:x="2164" fg:w="1"/><text x="58.8315%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146873 (1 samples, 0.03%)</title><rect x="58.6086%" y="37" width="0.0271%" height="15" fill="rgb(215,223,47)" fg:x="2165" fg:w="1"/><text x="58.8586%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914688e (1 samples, 0.03%)</title><rect x="58.6356%" y="37" width="0.0271%" height="15" fill="rgb(248,225,23)" fg:x="2166" fg:w="1"/><text x="58.8856%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468aa (1 samples, 0.03%)</title><rect x="58.6627%" y="37" width="0.0271%" height="15" fill="rgb(250,108,0)" fg:x="2167" fg:w="1"/><text x="58.9127%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468b5 (1 samples, 0.03%)</title><rect x="58.6898%" y="37" width="0.0271%" height="15" fill="rgb(228,208,7)" fg:x="2168" fg:w="1"/><text x="58.9398%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146911 (1 samples, 0.03%)</title><rect x="58.7168%" y="37" width="0.0271%" height="15" fill="rgb(244,45,10)" fg:x="2169" fg:w="1"/><text x="58.9668%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914694d (1 samples, 0.03%)</title><rect x="58.7439%" y="37" width="0.0271%" height="15" fill="rgb(207,125,25)" fg:x="2170" fg:w="1"/><text x="58.9939%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146960 (2 samples, 0.05%)</title><rect x="58.7710%" y="37" width="0.0541%" height="15" fill="rgb(210,195,18)" fg:x="2171" fg:w="2"/><text x="59.0210%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146974 (1 samples, 0.03%)</title><rect x="58.8251%" y="37" width="0.0271%" height="15" fill="rgb(249,80,12)" fg:x="2173" fg:w="1"/><text x="59.0751%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (9 samples, 0.24%)</title><rect x="58.8522%" y="37" width="0.2436%" height="15" fill="rgb(221,65,9)" fg:x="2174" fg:w="9"/><text x="59.1022%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819128495 (21 samples, 0.57%)</title><rect x="58.5544%" y="53" width="0.5685%" height="15" fill="rgb(235,49,36)" fg:x="2163" fg:w="21"/><text x="58.8044%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191469ba (1 samples, 0.03%)</title><rect x="59.0958%" y="37" width="0.0271%" height="15" fill="rgb(225,32,20)" fg:x="2183" fg:w="1"/><text x="59.3458%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912849c (1 samples, 0.03%)</title><rect x="59.1229%" y="53" width="0.0271%" height="15" fill="rgb(215,141,46)" fg:x="2184" fg:w="1"/><text x="59.3729%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191284a4 (1 samples, 0.03%)</title><rect x="59.1500%" y="53" width="0.0271%" height="15" fill="rgb(250,160,47)" fg:x="2185" fg:w="1"/><text x="59.4000%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81915026b (98 samples, 2.65%)</title><rect x="56.5512%" y="85" width="2.6530%" height="15" fill="rgb(216,222,40)" fg:x="2089" fg:w="98"/><text x="56.8012%" y="95.50">li..</text></g><g><title>libsystem_malloc.dylib`0x7ff81914fb9f (84 samples, 2.27%)</title><rect x="56.9302%" y="69" width="2.2740%" height="15" fill="rgb(234,217,39)" fg:x="2103" fg:w="84"/><text x="57.1802%" y="79.50">l..</text></g><g><title>libsystem_malloc.dylib`0x7ff8191284a8 (1 samples, 0.03%)</title><rect x="59.1770%" y="53" width="0.0271%" height="15" fill="rgb(207,178,40)" fg:x="2186" fg:w="1"/><text x="59.4270%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191502b1 (1 samples, 0.03%)</title><rect x="59.2041%" y="85" width="0.0271%" height="15" fill="rgb(221,136,13)" fg:x="2187" fg:w="1"/><text x="59.4541%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191502ba (2 samples, 0.05%)</title><rect x="59.2312%" y="85" width="0.0541%" height="15" fill="rgb(249,199,10)" fg:x="2188" fg:w="2"/><text x="59.4812%" y="95.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (145 samples, 3.93%)</title><rect x="55.3871%" y="117" width="3.9253%" height="15" fill="rgb(249,222,13)" fg:x="2046" fg:w="145"/><text x="55.6371%" y="127.50">redi..</text></g><g><title>redirs`alloc::raw_vec::finish_grow (126 samples, 3.41%)</title><rect x="55.9015%" y="101" width="3.4109%" height="15" fill="rgb(244,185,38)" fg:x="2065" fg:w="126"/><text x="56.1515%" y="111.50">red..</text></g><g><title>libsystem_malloc.dylib`0x7ff8191502bc (1 samples, 0.03%)</title><rect x="59.2853%" y="85" width="0.0271%" height="15" fill="rgb(236,202,9)" fg:x="2190" fg:w="1"/><text x="59.5353%" y="95.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="59.3124%" y="117" width="0.0271%" height="15" fill="rgb(250,229,37)" fg:x="2191" fg:w="1"/><text x="59.5624%" y="127.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral (2 samples, 0.05%)</title><rect x="59.3395%" y="117" width="0.0541%" height="15" fill="rgb(206,174,23)" fg:x="2192" fg:w="2"/><text x="59.5895%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="59.5290%" y="85" width="0.0271%" height="15" fill="rgb(211,33,43)" fg:x="2199" fg:w="1"/><text x="59.7790%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125173 (1 samples, 0.03%)</title><rect x="59.6372%" y="69" width="0.0271%" height="15" fill="rgb(245,58,50)" fg:x="2203" fg:w="1"/><text x="59.8872%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f64a (1 samples, 0.03%)</title><rect x="59.6643%" y="69" width="0.0271%" height="15" fill="rgb(244,68,36)" fg:x="2204" fg:w="1"/><text x="59.9143%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f677 (2 samples, 0.05%)</title><rect x="59.6914%" y="69" width="0.0541%" height="15" fill="rgb(232,229,15)" fg:x="2205" fg:w="2"/><text x="59.9414%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251e2 (1 samples, 0.03%)</title><rect x="59.7726%" y="53" width="0.0271%" height="15" fill="rgb(254,30,23)" fg:x="2208" fg:w="1"/><text x="60.0226%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251fd (3 samples, 0.08%)</title><rect x="59.7997%" y="53" width="0.0812%" height="15" fill="rgb(235,160,14)" fg:x="2209" fg:w="3"/><text x="60.0497%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (5 samples, 0.14%)</title><rect x="59.8809%" y="53" width="0.1354%" height="15" fill="rgb(212,155,44)" fg:x="2212" fg:w="5"/><text x="60.1309%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125215 (1 samples, 0.03%)</title><rect x="60.0162%" y="53" width="0.0271%" height="15" fill="rgb(226,2,50)" fg:x="2217" fg:w="1"/><text x="60.2662%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (2 samples, 0.05%)</title><rect x="60.0433%" y="53" width="0.0541%" height="15" fill="rgb(234,177,6)" fg:x="2218" fg:w="2"/><text x="60.2933%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125265 (1 samples, 0.03%)</title><rect x="60.0975%" y="53" width="0.0271%" height="15" fill="rgb(217,24,9)" fg:x="2220" fg:w="1"/><text x="60.3475%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912528f (1 samples, 0.03%)</title><rect x="60.1245%" y="53" width="0.0271%" height="15" fill="rgb(220,13,46)" fg:x="2221" fg:w="1"/><text x="60.3745%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125308 (1 samples, 0.03%)</title><rect x="60.1516%" y="53" width="0.0271%" height="15" fill="rgb(239,221,27)" fg:x="2222" fg:w="1"/><text x="60.4016%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (2 samples, 0.05%)</title><rect x="60.1787%" y="53" width="0.0541%" height="15" fill="rgb(222,198,25)" fg:x="2223" fg:w="2"/><text x="60.4287%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (2 samples, 0.05%)</title><rect x="60.2328%" y="53" width="0.0541%" height="15" fill="rgb(211,99,13)" fg:x="2225" fg:w="2"/><text x="60.4828%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253ce (1 samples, 0.03%)</title><rect x="60.2870%" y="53" width="0.0271%" height="15" fill="rgb(232,111,31)" fg:x="2227" fg:w="1"/><text x="60.5370%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253d1 (1 samples, 0.03%)</title><rect x="60.3140%" y="53" width="0.0271%" height="15" fill="rgb(245,82,37)" fg:x="2228" fg:w="1"/><text x="60.5640%" y="63.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (30 samples, 0.81%)</title><rect x="59.5560%" y="85" width="0.8121%" height="15" fill="rgb(227,149,46)" fg:x="2200" fg:w="30"/><text x="59.8060%" y="95.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (23 samples, 0.62%)</title><rect x="59.7455%" y="69" width="0.6226%" height="15" fill="rgb(218,36,50)" fg:x="2207" fg:w="23"/><text x="59.9955%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (1 samples, 0.03%)</title><rect x="60.3411%" y="53" width="0.0271%" height="15" fill="rgb(226,80,48)" fg:x="2229" fg:w="1"/><text x="60.5911%" y="63.50"></text></g><g><title>redirs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (33 samples, 0.89%)</title><rect x="59.5290%" y="101" width="0.8933%" height="15" fill="rgb(238,224,15)" fg:x="2199" fg:w="33"/><text x="59.7790%" y="111.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="60.3682%" y="85" width="0.0541%" height="15" fill="rgb(241,136,10)" fg:x="2230" fg:w="2"/><text x="60.6182%" y="95.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral (2 samples, 0.05%)</title><rect x="60.4223%" y="101" width="0.0541%" height="15" fill="rgb(208,32,45)" fg:x="2232" fg:w="2"/><text x="60.6723%" y="111.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.03%)</title><rect x="60.4764%" y="101" width="0.0271%" height="15" fill="rgb(207,135,9)" fg:x="2234" fg:w="1"/><text x="60.7264%" y="111.50"></text></g><g><title>redirs`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (43 samples, 1.16%)</title><rect x="59.3936%" y="117" width="1.1640%" height="15" fill="rgb(206,86,44)" fg:x="2194" fg:w="43"/><text x="59.6436%" y="127.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral (2 samples, 0.05%)</title><rect x="60.5035%" y="101" width="0.0541%" height="15" fill="rgb(245,177,15)" fg:x="2235" fg:w="2"/><text x="60.7535%" y="111.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.05%)</title><rect x="60.5035%" y="85" width="0.0541%" height="15" fill="rgb(206,64,50)" fg:x="2235" fg:w="2"/><text x="60.7535%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251b6 (1 samples, 0.03%)</title><rect x="61.0449%" y="101" width="0.0271%" height="15" fill="rgb(234,36,40)" fg:x="2255" fg:w="1"/><text x="61.2949%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251f9 (1 samples, 0.03%)</title><rect x="61.0720%" y="101" width="0.0271%" height="15" fill="rgb(213,64,8)" fg:x="2256" fg:w="1"/><text x="61.3220%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251fd (1 samples, 0.03%)</title><rect x="61.0991%" y="101" width="0.0271%" height="15" fill="rgb(210,75,36)" fg:x="2257" fg:w="1"/><text x="61.3491%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (8 samples, 0.22%)</title><rect x="61.1262%" y="101" width="0.2166%" height="15" fill="rgb(229,88,21)" fg:x="2258" fg:w="8"/><text x="61.3762%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912520b (2 samples, 0.05%)</title><rect x="61.3427%" y="101" width="0.0541%" height="15" fill="rgb(252,204,47)" fg:x="2266" fg:w="2"/><text x="61.5927%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (1 samples, 0.03%)</title><rect x="61.3969%" y="101" width="0.0271%" height="15" fill="rgb(208,77,27)" fg:x="2268" fg:w="1"/><text x="61.6469%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125226 (2 samples, 0.05%)</title><rect x="61.4239%" y="101" width="0.0541%" height="15" fill="rgb(221,76,26)" fg:x="2269" fg:w="2"/><text x="61.6739%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (6 samples, 0.16%)</title><rect x="61.4781%" y="101" width="0.1624%" height="15" fill="rgb(225,139,18)" fg:x="2271" fg:w="6"/><text x="61.7281%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523d (1 samples, 0.03%)</title><rect x="61.6405%" y="101" width="0.0271%" height="15" fill="rgb(230,137,11)" fg:x="2277" fg:w="1"/><text x="61.8905%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912525b (1 samples, 0.03%)</title><rect x="61.6676%" y="101" width="0.0271%" height="15" fill="rgb(212,28,1)" fg:x="2278" fg:w="1"/><text x="61.9176%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125289 (2 samples, 0.05%)</title><rect x="61.6946%" y="101" width="0.0541%" height="15" fill="rgb(248,164,17)" fg:x="2279" fg:w="2"/><text x="61.9446%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252bc (1 samples, 0.03%)</title><rect x="61.7488%" y="101" width="0.0271%" height="15" fill="rgb(222,171,42)" fg:x="2281" fg:w="1"/><text x="61.9988%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252e9 (1 samples, 0.03%)</title><rect x="61.7759%" y="101" width="0.0271%" height="15" fill="rgb(243,84,45)" fg:x="2282" fg:w="1"/><text x="62.0259%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252ee (4 samples, 0.11%)</title><rect x="61.8029%" y="101" width="0.1083%" height="15" fill="rgb(252,49,23)" fg:x="2283" fg:w="4"/><text x="62.0529%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252f0 (1 samples, 0.03%)</title><rect x="61.9112%" y="101" width="0.0271%" height="15" fill="rgb(215,19,7)" fg:x="2287" fg:w="1"/><text x="62.1612%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125308 (1 samples, 0.03%)</title><rect x="61.9383%" y="101" width="0.0271%" height="15" fill="rgb(238,81,41)" fg:x="2288" fg:w="1"/><text x="62.1883%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (1 samples, 0.03%)</title><rect x="61.9653%" y="101" width="0.0271%" height="15" fill="rgb(210,199,37)" fg:x="2289" fg:w="1"/><text x="62.2153%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912531a (1 samples, 0.03%)</title><rect x="61.9924%" y="101" width="0.0271%" height="15" fill="rgb(244,192,49)" fg:x="2290" fg:w="1"/><text x="62.2424%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125324 (2 samples, 0.05%)</title><rect x="62.0195%" y="101" width="0.0541%" height="15" fill="rgb(226,211,11)" fg:x="2291" fg:w="2"/><text x="62.2695%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532a (1 samples, 0.03%)</title><rect x="62.0736%" y="101" width="0.0271%" height="15" fill="rgb(236,162,54)" fg:x="2293" fg:w="1"/><text x="62.3236%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (5 samples, 0.14%)</title><rect x="62.1007%" y="101" width="0.1354%" height="15" fill="rgb(220,229,9)" fg:x="2294" fg:w="5"/><text x="62.3507%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253d8 (1 samples, 0.03%)</title><rect x="62.2361%" y="101" width="0.0271%" height="15" fill="rgb(250,87,22)" fg:x="2299" fg:w="1"/><text x="62.4861%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (2 samples, 0.05%)</title><rect x="62.2631%" y="101" width="0.0541%" height="15" fill="rgb(239,43,17)" fg:x="2300" fg:w="2"/><text x="62.5131%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253ff (2 samples, 0.05%)</title><rect x="62.3173%" y="101" width="0.0541%" height="15" fill="rgb(231,177,25)" fg:x="2302" fg:w="2"/><text x="62.5673%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466a4 (1 samples, 0.03%)</title><rect x="62.3714%" y="101" width="0.0271%" height="15" fill="rgb(219,179,1)" fg:x="2304" fg:w="1"/><text x="62.6214%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466a6 (1 samples, 0.03%)</title><rect x="62.3985%" y="101" width="0.0271%" height="15" fill="rgb(238,219,53)" fg:x="2305" fg:w="1"/><text x="62.6485%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466aa (1 samples, 0.03%)</title><rect x="62.4256%" y="101" width="0.0271%" height="15" fill="rgb(232,167,36)" fg:x="2306" fg:w="1"/><text x="62.6756%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466f6 (1 samples, 0.03%)</title><rect x="62.4526%" y="101" width="0.0271%" height="15" fill="rgb(244,19,51)" fg:x="2307" fg:w="1"/><text x="62.7026%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191466ff (2 samples, 0.05%)</title><rect x="62.4797%" y="101" width="0.0541%" height="15" fill="rgb(224,6,22)" fg:x="2308" fg:w="2"/><text x="62.7297%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146705 (2 samples, 0.05%)</title><rect x="62.5338%" y="101" width="0.0541%" height="15" fill="rgb(224,145,5)" fg:x="2310" fg:w="2"/><text x="62.7838%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467b1 (1 samples, 0.03%)</title><rect x="62.5880%" y="101" width="0.0271%" height="15" fill="rgb(234,130,49)" fg:x="2312" fg:w="1"/><text x="62.8380%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467de (1 samples, 0.03%)</title><rect x="62.6151%" y="101" width="0.0271%" height="15" fill="rgb(254,6,2)" fg:x="2313" fg:w="1"/><text x="62.8651%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191467f2 (1 samples, 0.03%)</title><rect x="62.6421%" y="101" width="0.0271%" height="15" fill="rgb(208,96,46)" fg:x="2314" fg:w="1"/><text x="62.8921%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146802 (2 samples, 0.05%)</title><rect x="62.6692%" y="101" width="0.0541%" height="15" fill="rgb(239,3,39)" fg:x="2315" fg:w="2"/><text x="62.9192%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146822 (1 samples, 0.03%)</title><rect x="62.7233%" y="101" width="0.0271%" height="15" fill="rgb(233,210,1)" fg:x="2317" fg:w="1"/><text x="62.9733%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146828 (1 samples, 0.03%)</title><rect x="62.7504%" y="101" width="0.0271%" height="15" fill="rgb(244,137,37)" fg:x="2318" fg:w="1"/><text x="63.0004%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146843 (2 samples, 0.05%)</title><rect x="62.7775%" y="101" width="0.0541%" height="15" fill="rgb(240,136,2)" fg:x="2319" fg:w="2"/><text x="63.0275%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146873 (2 samples, 0.05%)</title><rect x="62.8316%" y="101" width="0.0541%" height="15" fill="rgb(239,18,37)" fg:x="2321" fg:w="2"/><text x="63.0816%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146876 (1 samples, 0.03%)</title><rect x="62.8858%" y="101" width="0.0271%" height="15" fill="rgb(218,185,22)" fg:x="2323" fg:w="1"/><text x="63.1358%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146895 (1 samples, 0.03%)</title><rect x="62.9128%" y="101" width="0.0271%" height="15" fill="rgb(225,218,4)" fg:x="2324" fg:w="1"/><text x="63.1628%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468b5 (1 samples, 0.03%)</title><rect x="62.9399%" y="101" width="0.0271%" height="15" fill="rgb(230,182,32)" fg:x="2325" fg:w="1"/><text x="63.1899%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468ed (1 samples, 0.03%)</title><rect x="62.9670%" y="101" width="0.0271%" height="15" fill="rgb(242,56,43)" fg:x="2326" fg:w="1"/><text x="63.2170%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191468f7 (1 samples, 0.03%)</title><rect x="62.9940%" y="101" width="0.0271%" height="15" fill="rgb(233,99,24)" fg:x="2327" fg:w="1"/><text x="63.2440%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146960 (1 samples, 0.03%)</title><rect x="63.0211%" y="101" width="0.0271%" height="15" fill="rgb(234,209,42)" fg:x="2328" fg:w="1"/><text x="63.2711%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146962 (1 samples, 0.03%)</title><rect x="63.0482%" y="101" width="0.0271%" height="15" fill="rgb(227,7,12)" fg:x="2329" fg:w="1"/><text x="63.2982%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (9 samples, 0.24%)</title><rect x="63.0753%" y="101" width="0.2436%" height="15" fill="rgb(245,203,43)" fg:x="2330" fg:w="9"/><text x="63.3253%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191469ba (3 samples, 0.08%)</title><rect x="63.3189%" y="101" width="0.0812%" height="15" fill="rgb(238,205,33)" fg:x="2339" fg:w="3"/><text x="63.5689%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.27%)</title><rect x="63.4001%" y="101" width="0.2707%" height="15" fill="rgb(231,56,7)" fg:x="2342" fg:w="10"/><text x="63.6501%" y="111.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral (2 samples, 0.05%)</title><rect x="63.6708%" y="101" width="0.0541%" height="15" fill="rgb(244,186,29)" fg:x="2352" fg:w="2"/><text x="63.9208%" y="111.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="63.9686%" y="85" width="0.0271%" height="15" fill="rgb(234,111,31)" fg:x="2363" fg:w="1"/><text x="64.2186%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="64.0498%" y="69" width="0.0271%" height="15" fill="rgb(241,149,10)" fg:x="2366" fg:w="1"/><text x="64.2998%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251ae (1 samples, 0.03%)</title><rect x="64.2934%" y="53" width="0.0271%" height="15" fill="rgb(249,206,44)" fg:x="2375" fg:w="1"/><text x="64.5434%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253df (1 samples, 0.03%)</title><rect x="64.3205%" y="53" width="0.0271%" height="15" fill="rgb(251,153,30)" fg:x="2376" fg:w="1"/><text x="64.5705%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f64a (1 samples, 0.03%)</title><rect x="64.3476%" y="53" width="0.0271%" height="15" fill="rgb(239,152,38)" fg:x="2377" fg:w="1"/><text x="64.5976%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f654 (1 samples, 0.03%)</title><rect x="64.3747%" y="53" width="0.0271%" height="15" fill="rgb(249,139,47)" fg:x="2378" fg:w="1"/><text x="64.6247%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f660 (1 samples, 0.03%)</title><rect x="64.4017%" y="53" width="0.0271%" height="15" fill="rgb(244,64,35)" fg:x="2379" fg:w="1"/><text x="64.6517%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f677 (3 samples, 0.08%)</title><rect x="64.4288%" y="53" width="0.0812%" height="15" fill="rgb(216,46,15)" fg:x="2380" fg:w="3"/><text x="64.6788%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f679 (1 samples, 0.03%)</title><rect x="64.5100%" y="53" width="0.0271%" height="15" fill="rgb(250,74,19)" fg:x="2383" fg:w="1"/><text x="64.7600%" y="63.50"></text></g><g><title>redirs`DYLD-STUB$$malloc (1 samples, 0.03%)</title><rect x="64.5371%" y="53" width="0.0271%" height="15" fill="rgb(249,42,33)" fg:x="2384" fg:w="1"/><text x="64.7871%" y="63.50"></text></g><g><title>redirs`__rdl_alloc (4 samples, 0.11%)</title><rect x="64.5642%" y="53" width="0.1083%" height="15" fill="rgb(242,149,17)" fg:x="2385" fg:w="4"/><text x="64.8142%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251b8 (1 samples, 0.03%)</title><rect x="64.7807%" y="37" width="0.0271%" height="15" fill="rgb(244,29,21)" fg:x="2393" fg:w="1"/><text x="65.0307%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251e2 (1 samples, 0.03%)</title><rect x="64.8078%" y="37" width="0.0271%" height="15" fill="rgb(220,130,37)" fg:x="2394" fg:w="1"/><text x="65.0578%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125203 (2 samples, 0.05%)</title><rect x="64.8349%" y="37" width="0.0541%" height="15" fill="rgb(211,67,2)" fg:x="2395" fg:w="2"/><text x="65.0849%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (8 samples, 0.22%)</title><rect x="64.8890%" y="37" width="0.2166%" height="15" fill="rgb(235,68,52)" fg:x="2397" fg:w="8"/><text x="65.1390%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912520b (3 samples, 0.08%)</title><rect x="65.1056%" y="37" width="0.0812%" height="15" fill="rgb(246,142,3)" fg:x="2405" fg:w="3"/><text x="65.3556%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (3 samples, 0.08%)</title><rect x="65.1868%" y="37" width="0.0812%" height="15" fill="rgb(241,25,7)" fg:x="2408" fg:w="3"/><text x="65.4368%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (5 samples, 0.14%)</title><rect x="65.2680%" y="37" width="0.1354%" height="15" fill="rgb(242,119,39)" fg:x="2411" fg:w="5"/><text x="65.5180%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523d (1 samples, 0.03%)</title><rect x="65.4034%" y="37" width="0.0271%" height="15" fill="rgb(241,98,45)" fg:x="2416" fg:w="1"/><text x="65.6534%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912525b (1 samples, 0.03%)</title><rect x="65.4304%" y="37" width="0.0271%" height="15" fill="rgb(254,28,30)" fg:x="2417" fg:w="1"/><text x="65.6804%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912525e (2 samples, 0.05%)</title><rect x="65.4575%" y="37" width="0.0541%" height="15" fill="rgb(241,142,54)" fg:x="2418" fg:w="2"/><text x="65.7075%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912529e (1 samples, 0.03%)</title><rect x="65.5116%" y="37" width="0.0271%" height="15" fill="rgb(222,85,15)" fg:x="2420" fg:w="1"/><text x="65.7616%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252a9 (1 samples, 0.03%)</title><rect x="65.5387%" y="37" width="0.0271%" height="15" fill="rgb(210,85,47)" fg:x="2421" fg:w="1"/><text x="65.7887%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252b6 (1 samples, 0.03%)</title><rect x="65.5658%" y="37" width="0.0271%" height="15" fill="rgb(224,206,25)" fg:x="2422" fg:w="1"/><text x="65.8158%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125308 (1 samples, 0.03%)</title><rect x="65.5929%" y="37" width="0.0271%" height="15" fill="rgb(243,201,19)" fg:x="2423" fg:w="1"/><text x="65.8429%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912530d (1 samples, 0.03%)</title><rect x="65.6199%" y="37" width="0.0271%" height="15" fill="rgb(236,59,4)" fg:x="2424" fg:w="1"/><text x="65.8699%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (3 samples, 0.08%)</title><rect x="65.6470%" y="37" width="0.0812%" height="15" fill="rgb(254,179,45)" fg:x="2425" fg:w="3"/><text x="65.8970%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912531a (1 samples, 0.03%)</title><rect x="65.7282%" y="37" width="0.0271%" height="15" fill="rgb(226,14,10)" fg:x="2428" fg:w="1"/><text x="65.9782%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532a (2 samples, 0.05%)</title><rect x="65.7553%" y="37" width="0.0541%" height="15" fill="rgb(244,27,41)" fg:x="2429" fg:w="2"/><text x="66.0053%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (10 samples, 0.27%)</title><rect x="65.8094%" y="37" width="0.2707%" height="15" fill="rgb(235,35,32)" fg:x="2431" fg:w="10"/><text x="66.0594%" y="47.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (78 samples, 2.11%)</title><rect x="64.0769%" y="69" width="2.1115%" height="15" fill="rgb(218,68,31)" fg:x="2367" fg:w="78"/><text x="64.3269%" y="79.50">r..</text></g><g><title>redirs`alloc::raw_vec::finish_grow (56 samples, 1.52%)</title><rect x="64.6724%" y="53" width="1.5160%" height="15" fill="rgb(207,120,37)" fg:x="2389" fg:w="56"/><text x="64.9224%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (4 samples, 0.11%)</title><rect x="66.0801%" y="37" width="0.1083%" height="15" fill="rgb(227,98,0)" fg:x="2441" fg:w="4"/><text x="66.3301%" y="47.50"></text></g><g><title>redirs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (83 samples, 2.25%)</title><rect x="63.9957%" y="85" width="2.2469%" height="15" fill="rgb(207,7,3)" fg:x="2364" fg:w="83"/><text x="64.2457%" y="95.50">r..</text></g><g><title>redirs`alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="66.1884%" y="69" width="0.0541%" height="15" fill="rgb(206,98,19)" fg:x="2445" fg:w="2"/><text x="66.4384%" y="79.50"></text></g><g><title>redirs`DYLD-STUB$$memcpy (1 samples, 0.03%)</title><rect x="66.2426%" y="85" width="0.0271%" height="15" fill="rgb(217,5,26)" fg:x="2447" fg:w="1"/><text x="66.4926%" y="95.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="66.2696%" y="85" width="0.0271%" height="15" fill="rgb(235,190,38)" fg:x="2448" fg:w="1"/><text x="66.5196%" y="95.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral (4 samples, 0.11%)</title><rect x="66.2967%" y="85" width="0.1083%" height="15" fill="rgb(247,86,24)" fg:x="2449" fg:w="4"/><text x="66.5467%" y="95.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.03%)</title><rect x="66.4050%" y="85" width="0.0271%" height="15" fill="rgb(205,101,16)" fg:x="2453" fg:w="1"/><text x="66.6550%" y="95.50"></text></g><g><title>redirs`redirs::command::parse_command (677 samples, 18.33%)</title><rect x="48.1862%" y="149" width="18.3270%" height="15" fill="rgb(246,168,33)" fg:x="1780" fg:w="677"/><text x="48.4362%" y="159.50">redirs`redirs::command::parse..</text></g><g><title>redirs`redirs::message::serialise::serialise_message (547 samples, 14.81%)</title><rect x="51.7055%" y="133" width="14.8078%" height="15" fill="rgb(231,114,1)" fg:x="1910" fg:w="547"/><text x="51.9555%" y="143.50">redirs`redirs::message:..</text></g><g><title>redirs`redirs::message::serialise::serialise_message (220 samples, 5.96%)</title><rect x="60.5577%" y="117" width="5.9556%" height="15" fill="rgb(207,184,53)" fg:x="2237" fg:w="220"/><text x="60.8077%" y="127.50">redirs`r..</text></g><g><title>redirs`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (103 samples, 2.79%)</title><rect x="63.7250%" y="101" width="2.7883%" height="15" fill="rgb(224,95,51)" fg:x="2354" fg:w="103"/><text x="63.9750%" y="111.50">re..</text></g><g><title>redirs`core::fmt::Formatter::pad_integral (3 samples, 0.08%)</title><rect x="66.4321%" y="85" width="0.0812%" height="15" fill="rgb(212,188,45)" fg:x="2454" fg:w="3"/><text x="66.6821%" y="95.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral::write_prefix (3 samples, 0.08%)</title><rect x="66.4321%" y="69" width="0.0812%" height="15" fill="rgb(223,154,38)" fg:x="2454" fg:w="3"/><text x="66.6821%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251ae (1 samples, 0.03%)</title><rect x="67.0276%" y="133" width="0.0271%" height="15" fill="rgb(251,22,52)" fg:x="2476" fg:w="1"/><text x="67.2776%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (1 samples, 0.03%)</title><rect x="67.0547%" y="133" width="0.0271%" height="15" fill="rgb(229,209,22)" fg:x="2477" fg:w="1"/><text x="67.3047%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (5 samples, 0.14%)</title><rect x="67.0818%" y="133" width="0.1354%" height="15" fill="rgb(234,138,34)" fg:x="2478" fg:w="5"/><text x="67.3318%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523d (1 samples, 0.03%)</title><rect x="67.2171%" y="133" width="0.0271%" height="15" fill="rgb(212,95,11)" fg:x="2483" fg:w="1"/><text x="67.4671%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252ee (1 samples, 0.03%)</title><rect x="67.2442%" y="133" width="0.0271%" height="15" fill="rgb(240,179,47)" fg:x="2484" fg:w="1"/><text x="67.4942%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252f0 (1 samples, 0.03%)</title><rect x="67.2713%" y="133" width="0.0271%" height="15" fill="rgb(240,163,11)" fg:x="2485" fg:w="1"/><text x="67.5213%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (1 samples, 0.03%)</title><rect x="67.2983%" y="133" width="0.0271%" height="15" fill="rgb(236,37,12)" fg:x="2486" fg:w="1"/><text x="67.5483%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (2 samples, 0.05%)</title><rect x="67.3254%" y="133" width="0.0541%" height="15" fill="rgb(232,164,16)" fg:x="2487" fg:w="2"/><text x="67.5754%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253f8 (2 samples, 0.05%)</title><rect x="67.3795%" y="133" width="0.0541%" height="15" fill="rgb(244,205,15)" fg:x="2489" fg:w="2"/><text x="67.6295%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81914f677 (1 samples, 0.03%)</title><rect x="67.4337%" y="133" width="0.0271%" height="15" fill="rgb(223,117,47)" fg:x="2491" fg:w="1"/><text x="67.6837%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="67.4607%" y="133" width="0.0271%" height="15" fill="rgb(244,107,35)" fg:x="2492" fg:w="1"/><text x="67.7107%" y="143.50"></text></g><g><title>redirs`&lt;&amp;[u8] as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.03%)</title><rect x="67.4878%" y="133" width="0.0271%" height="15" fill="rgb(205,140,8)" fg:x="2493" fg:w="1"/><text x="67.7378%" y="143.50"></text></g><g><title>redirs`&lt;&amp;str as nom::traits::FindToken&lt;u8&gt;&gt;::find_token (212 samples, 5.74%)</title><rect x="67.5961%" y="117" width="5.7390%" height="15" fill="rgb(228,84,46)" fg:x="2497" fg:w="212"/><text x="67.8461%" y="127.50">redirs`..</text></g><g><title>redirs`memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (208 samples, 5.63%)</title><rect x="67.7044%" y="101" width="5.6308%" height="15" fill="rgb(254,188,9)" fg:x="2501" fg:w="208"/><text x="67.9544%" y="111.50">redirs`..</text></g><g><title>redirs`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="73.3351%" y="117" width="0.0271%" height="15" fill="rgb(206,112,54)" fg:x="2709" fg:w="1"/><text x="73.5851%" y="127.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (3 samples, 0.08%)</title><rect x="73.3622%" y="117" width="0.0812%" height="15" fill="rgb(216,84,49)" fg:x="2710" fg:w="3"/><text x="73.6122%" y="127.50"></text></g><g><title>redirs`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="73.4164%" y="101" width="0.0271%" height="15" fill="rgb(214,194,35)" fg:x="2712" fg:w="1"/><text x="73.6664%" y="111.50"></text></g><g><title>redirs`core::num::_&lt;impl core::str::traits::FromStr for isize&gt;::from_str (6 samples, 0.16%)</title><rect x="73.4434%" y="117" width="0.1624%" height="15" fill="rgb(249,28,3)" fg:x="2713" fg:w="6"/><text x="73.6934%" y="127.50"></text></g><g><title>redirs`core::num::_&lt;impl i64&gt;::from_str_radix (5 samples, 0.14%)</title><rect x="73.4705%" y="101" width="0.1354%" height="15" fill="rgb(222,56,52)" fg:x="2714" fg:w="5"/><text x="73.7205%" y="111.50"></text></g><g><title>redirs`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (226 samples, 6.12%)</title><rect x="67.5149%" y="133" width="6.1180%" height="15" fill="rgb(245,217,50)" fg:x="2494" fg:w="226"/><text x="67.7649%" y="143.50">redirs`&lt;..</text></g><g><title>redirs`memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (1 samples, 0.03%)</title><rect x="73.6058%" y="117" width="0.0271%" height="15" fill="rgb(213,201,24)" fg:x="2719" fg:w="1"/><text x="73.8558%" y="127.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (1 samples, 0.03%)</title><rect x="73.6329%" y="133" width="0.0271%" height="15" fill="rgb(248,116,28)" fg:x="2720" fg:w="1"/><text x="73.8829%" y="143.50"></text></g><g><title>redirs`core::num::_&lt;impl core::str::traits::FromStr for isize&gt;::from_str (3 samples, 0.08%)</title><rect x="73.6600%" y="133" width="0.0812%" height="15" fill="rgb(219,72,43)" fg:x="2721" fg:w="3"/><text x="73.9100%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251f9 (1 samples, 0.03%)</title><rect x="73.9578%" y="117" width="0.0271%" height="15" fill="rgb(209,138,14)" fg:x="2732" fg:w="1"/><text x="74.2078%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251fd (1 samples, 0.03%)</title><rect x="73.9848%" y="117" width="0.0271%" height="15" fill="rgb(222,18,33)" fg:x="2733" fg:w="1"/><text x="74.2348%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125203 (1 samples, 0.03%)</title><rect x="74.0119%" y="117" width="0.0271%" height="15" fill="rgb(213,199,7)" fg:x="2734" fg:w="1"/><text x="74.2619%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (1 samples, 0.03%)</title><rect x="74.0390%" y="117" width="0.0271%" height="15" fill="rgb(250,110,10)" fg:x="2735" fg:w="1"/><text x="74.2890%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125224 (2 samples, 0.05%)</title><rect x="74.0661%" y="117" width="0.0541%" height="15" fill="rgb(248,123,6)" fg:x="2736" fg:w="2"/><text x="74.3161%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523a (4 samples, 0.11%)</title><rect x="74.1202%" y="117" width="0.1083%" height="15" fill="rgb(206,91,31)" fg:x="2738" fg:w="4"/><text x="74.3702%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912523d (2 samples, 0.05%)</title><rect x="74.2285%" y="117" width="0.0541%" height="15" fill="rgb(211,154,13)" fg:x="2742" fg:w="2"/><text x="74.4785%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191252ee (1 samples, 0.03%)</title><rect x="74.2826%" y="117" width="0.0271%" height="15" fill="rgb(225,148,7)" fg:x="2744" fg:w="1"/><text x="74.5326%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125302 (1 samples, 0.03%)</title><rect x="74.3097%" y="117" width="0.0271%" height="15" fill="rgb(220,160,43)" fg:x="2745" fg:w="1"/><text x="74.5597%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125308 (2 samples, 0.05%)</title><rect x="74.3368%" y="117" width="0.0541%" height="15" fill="rgb(213,52,39)" fg:x="2746" fg:w="2"/><text x="74.5868%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125312 (6 samples, 0.16%)</title><rect x="74.3909%" y="117" width="0.1624%" height="15" fill="rgb(243,137,7)" fg:x="2748" fg:w="6"/><text x="74.6409%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912532f (4 samples, 0.11%)</title><rect x="74.5533%" y="117" width="0.1083%" height="15" fill="rgb(230,79,13)" fg:x="2754" fg:w="4"/><text x="74.8033%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253ce (1 samples, 0.03%)</title><rect x="74.6616%" y="117" width="0.0271%" height="15" fill="rgb(247,105,23)" fg:x="2758" fg:w="1"/><text x="74.9116%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (2 samples, 0.05%)</title><rect x="74.6887%" y="117" width="0.0541%" height="15" fill="rgb(223,179,41)" fg:x="2759" fg:w="2"/><text x="74.9387%" y="127.50"></text></g><g><title>redirs`&lt;&amp;str as nom::traits::FindToken&lt;u8&gt;&gt;::find_token (2 samples, 0.05%)</title><rect x="74.9053%" y="101" width="0.0541%" height="15" fill="rgb(218,9,34)" fg:x="2767" fg:w="2"/><text x="75.1553%" y="111.50"></text></g><g><title>redirs`memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (2 samples, 0.05%)</title><rect x="74.9053%" y="85" width="0.0541%" height="15" fill="rgb(222,106,8)" fg:x="2767" fg:w="2"/><text x="75.1553%" y="95.50"></text></g><g><title>redirs`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="74.9594%" y="101" width="0.0271%" height="15" fill="rgb(211,220,0)" fg:x="2769" fg:w="1"/><text x="75.2094%" y="111.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (2 samples, 0.05%)</title><rect x="74.9865%" y="101" width="0.0541%" height="15" fill="rgb(229,52,16)" fg:x="2770" fg:w="2"/><text x="75.2365%" y="111.50"></text></g><g><title>redirs`core::num::_&lt;impl core::str::traits::FromStr for isize&gt;::from_str (3 samples, 0.08%)</title><rect x="75.0406%" y="101" width="0.0812%" height="15" fill="rgb(212,155,18)" fg:x="2772" fg:w="3"/><text x="75.2906%" y="111.50"></text></g><g><title>redirs`core::num::_&lt;impl i64&gt;::from_str_radix (1 samples, 0.03%)</title><rect x="75.0947%" y="85" width="0.0271%" height="15" fill="rgb(242,21,14)" fg:x="2774" fg:w="1"/><text x="75.3447%" y="95.50"></text></g><g><title>redirs`core::num::_&lt;impl i64&gt;::from_str_radix (1 samples, 0.03%)</title><rect x="75.1218%" y="101" width="0.0271%" height="15" fill="rgb(222,19,48)" fg:x="2775" fg:w="1"/><text x="75.3718%" y="111.50"></text></g><g><title>redirs`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (18 samples, 0.49%)</title><rect x="74.7428%" y="117" width="0.4873%" height="15" fill="rgb(232,45,27)" fg:x="2761" fg:w="18"/><text x="74.9928%" y="127.50"></text></g><g><title>redirs`memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (3 samples, 0.08%)</title><rect x="75.1489%" y="101" width="0.0812%" height="15" fill="rgb(249,103,42)" fg:x="2776" fg:w="3"/><text x="75.3989%" y="111.50"></text></g><g><title>redirs`redirs::message::parse::parse_message (326 samples, 8.83%)</title><rect x="66.5133%" y="149" width="8.8251%" height="15" fill="rgb(246,81,33)" fg:x="2457" fg:w="326"/><text x="66.7633%" y="159.50">redirs`redir..</text></g><g><title>redirs`redirs::message::parse::parse_message (59 samples, 1.60%)</title><rect x="73.7412%" y="133" width="1.5972%" height="15" fill="rgb(252,33,42)" fg:x="2724" fg:w="59"/><text x="73.9912%" y="143.50"></text></g><g><title>redirs`alloc::string::String::from_utf8_lossy (4 samples, 0.11%)</title><rect x="75.2301%" y="117" width="0.1083%" height="15" fill="rgb(209,212,41)" fg:x="2779" fg:w="4"/><text x="75.4801%" y="127.50"></text></g><g><title>redirs`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="75.2572%" y="101" width="0.0812%" height="15" fill="rgb(207,154,6)" fg:x="2780" fg:w="3"/><text x="75.5072%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125173 (1 samples, 0.03%)</title><rect x="75.3925%" y="133" width="0.0271%" height="15" fill="rgb(223,64,47)" fg:x="2785" fg:w="1"/><text x="75.6425%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125226 (1 samples, 0.03%)</title><rect x="75.4196%" y="133" width="0.0271%" height="15" fill="rgb(211,161,38)" fg:x="2786" fg:w="1"/><text x="75.6696%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125262 (1 samples, 0.03%)</title><rect x="75.4467%" y="133" width="0.0271%" height="15" fill="rgb(219,138,40)" fg:x="2787" fg:w="1"/><text x="75.6967%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125305 (1 samples, 0.03%)</title><rect x="75.4737%" y="133" width="0.0271%" height="15" fill="rgb(241,228,46)" fg:x="2788" fg:w="1"/><text x="75.7237%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146840 (1 samples, 0.03%)</title><rect x="75.5008%" y="133" width="0.0271%" height="15" fill="rgb(223,209,38)" fg:x="2789" fg:w="1"/><text x="75.7508%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146843 (1 samples, 0.03%)</title><rect x="75.5279%" y="133" width="0.0271%" height="15" fill="rgb(236,164,45)" fg:x="2790" fg:w="1"/><text x="75.7779%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146983 (1 samples, 0.03%)</title><rect x="75.5550%" y="133" width="0.0271%" height="15" fill="rgb(231,15,5)" fg:x="2791" fg:w="1"/><text x="75.8050%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819146a02 (1 samples, 0.03%)</title><rect x="75.5820%" y="133" width="0.0271%" height="15" fill="rgb(252,35,15)" fg:x="2792" fg:w="1"/><text x="75.8320%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191251fd (1 samples, 0.03%)</title><rect x="75.6091%" y="117" width="0.0271%" height="15" fill="rgb(248,181,18)" fg:x="2793" fg:w="1"/><text x="75.8591%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912520b (1 samples, 0.03%)</title><rect x="75.6362%" y="117" width="0.0271%" height="15" fill="rgb(233,39,42)" fg:x="2794" fg:w="1"/><text x="75.8862%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125219 (1 samples, 0.03%)</title><rect x="75.6632%" y="117" width="0.0271%" height="15" fill="rgb(238,110,33)" fg:x="2795" fg:w="1"/><text x="75.9132%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81912531a (1 samples, 0.03%)</title><rect x="75.6903%" y="117" width="0.0271%" height="15" fill="rgb(233,195,10)" fg:x="2796" fg:w="1"/><text x="75.9403%" y="127.50"></text></g><g><title>redirs`&lt;alloc::vec::Vec&lt;u8&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.14%)</title><rect x="75.6091%" y="133" width="0.1354%" height="15" fill="rgb(254,105,3)" fg:x="2793" fg:w="5"/><text x="75.8591%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8191253e0 (1 samples, 0.03%)</title><rect x="75.7174%" y="117" width="0.0271%" height="15" fill="rgb(221,225,9)" fg:x="2797" fg:w="1"/><text x="75.9674%" y="127.50"></text></g><g><title>redirs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.08%)</title><rect x="75.7445%" y="117" width="0.0812%" height="15" fill="rgb(224,227,45)" fg:x="2798" fg:w="3"/><text x="75.9945%" y="127.50"></text></g><g><title>redirs`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.08%)</title><rect x="75.7445%" y="101" width="0.0812%" height="15" fill="rgb(229,198,43)" fg:x="2798" fg:w="3"/><text x="75.9945%" y="111.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (3 samples, 0.08%)</title><rect x="75.7445%" y="85" width="0.0812%" height="15" fill="rgb(206,209,35)" fg:x="2798" fg:w="3"/><text x="75.9945%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff819125207 (2 samples, 0.05%)</title><rect x="75.7715%" y="69" width="0.0541%" height="15" fill="rgb(245,195,53)" fg:x="2799" fg:w="2"/><text x="76.0215%" y="79.50"></text></g><g><title>redirs`redirs::message::serialise::serialise_message (19 samples, 0.51%)</title><rect x="75.3384%" y="149" width="0.5143%" height="15" fill="rgb(240,92,26)" fg:x="2783" fg:w="19"/><text x="75.5884%" y="159.50"></text></g><g><title>redirs`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (4 samples, 0.11%)</title><rect x="75.7445%" y="133" width="0.1083%" height="15" fill="rgb(207,40,23)" fg:x="2798" fg:w="4"/><text x="75.9945%" y="143.50"></text></g><g><title>redirs`core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="75.8257%" y="117" width="0.0271%" height="15" fill="rgb(223,111,35)" fg:x="2801" fg:w="1"/><text x="76.0757%" y="127.50"></text></g><g><title>libsystem_c.dylib`0x7ff8191c29c6 (1 samples, 0.03%)</title><rect x="76.1505%" y="133" width="0.0271%" height="15" fill="rgb(229,147,28)" fg:x="2813" fg:w="1"/><text x="76.4005%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (854 samples, 23.12%)</title><rect x="76.1776%" y="133" width="23.1186%" height="15" fill="rgb(211,29,28)" fg:x="2814" fg:w="854"/><text x="76.4276%" y="143.50">libsystem_kernel.dylib`__sendto</text></g><g><title>redirs`std::io::Write::write_all (871 samples, 23.58%)</title><rect x="75.8527%" y="149" width="23.5788%" height="15" fill="rgb(228,72,33)" fg:x="2802" fg:w="871"/><text x="76.1027%" y="159.50">redirs`std::io::Write::write_all</text></g><g><title>redirs`std::net::udp::UdpSocket::send (5 samples, 0.14%)</title><rect x="99.2962%" y="133" width="0.1354%" height="15" fill="rgb(205,214,31)" fg:x="3668" fg:w="5"/><text x="99.5462%" y="143.50"></text></g><g><title>libsystem_c.dylib`0x7ff8191c29ca (1 samples, 0.03%)</title><rect x="99.4044%" y="117" width="0.0271%" height="15" fill="rgb(224,111,15)" fg:x="3672" fg:w="1"/><text x="99.6544%" y="127.50"></text></g><g><title>redirs`std::net::udp::UdpSocket::send (2 samples, 0.05%)</title><rect x="99.4315%" y="149" width="0.0541%" height="15" fill="rgb(253,21,26)" fg:x="3673" fg:w="2"/><text x="99.6815%" y="159.50"></text></g><g><title>redirs`redirs::server::handle_client (3,667 samples, 99.27%)</title><rect x="0.6497%" y="165" width="99.2691%" height="15" fill="rgb(245,139,43)" fg:x="24" fg:w="3667"/><text x="0.8997%" y="175.50">redirs`redirs::server::handle_client</text></g><g><title>redirs`std::os::unix::net::datagram::UnixDatagram::recv (16 samples, 0.43%)</title><rect x="99.4857%" y="149" width="0.4331%" height="15" fill="rgb(252,170,7)" fg:x="3675" fg:w="16"/><text x="99.7357%" y="159.50"></text></g><g><title>redirs`&lt;dashmap::DashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="99.9188%" y="149" width="0.0271%" height="15" fill="rgb(231,118,14)" fg:x="3691" fg:w="1"/><text x="100.1688%" y="159.50"></text></g><g><title>redirs`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="99.9188%" y="133" width="0.0271%" height="15" fill="rgb(238,83,0)" fg:x="3691" fg:w="1"/><text x="100.1688%" y="143.50"></text></g><g><title>redirs`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="99.9188%" y="117" width="0.0271%" height="15" fill="rgb(221,39,39)" fg:x="3691" fg:w="1"/><text x="100.1688%" y="127.50"></text></g><g><title>redirs`__rdl_realloc (1 samples, 0.03%)</title><rect x="99.9188%" y="101" width="0.0271%" height="15" fill="rgb(222,119,46)" fg:x="3691" fg:w="1"/><text x="100.1688%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81913a8d9 (1 samples, 0.03%)</title><rect x="99.9188%" y="85" width="0.0271%" height="15" fill="rgb(222,165,49)" fg:x="3691" fg:w="1"/><text x="100.1688%" y="95.50"></text></g><g><title>all (3,694 samples, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(219,113,52)" fg:x="0" fg:w="3694"/><text x="0.2500%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (3,694 samples, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(214,7,15)" fg:x="0" fg:w="3694"/><text x="0.2500%" y="255.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (3,692 samples, 99.95%)</title><rect x="0.0541%" y="229" width="99.9459%" height="15" fill="rgb(235,32,4)" fg:x="2" fg:w="3692"/><text x="0.3041%" y="239.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>redirs`std::sys::pal::unix::thread::Thread::new::thread_start (3,692 samples, 99.95%)</title><rect x="0.0541%" y="213" width="99.9459%" height="15" fill="rgb(238,90,54)" fg:x="2" fg:w="3692"/><text x="0.3041%" y="223.50">redirs`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>redirs`core::ops::function::FnOnce::call_once{{vtable.shim}} (3,691 samples, 99.92%)</title><rect x="0.0812%" y="197" width="99.9188%" height="15" fill="rgb(213,208,19)" fg:x="3" fg:w="3691"/><text x="0.3312%" y="207.50">redirs`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>redirs`std::sys::backtrace::__rust_begin_short_backtrace (3,691 samples, 99.92%)</title><rect x="0.0812%" y="181" width="99.9188%" height="15" fill="rgb(233,156,4)" fg:x="3" fg:w="3691"/><text x="0.3312%" y="191.50">redirs`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>redirs`redirs::server::listen (3 samples, 0.08%)</title><rect x="99.9188%" y="165" width="0.0812%" height="15" fill="rgb(207,194,5)" fg:x="3691" fg:w="3"/><text x="100.1688%" y="175.50"></text></g><g><title>redirs`std::thread::Builder::spawn_unchecked (2 samples, 0.05%)</title><rect x="99.9459%" y="149" width="0.0541%" height="15" fill="rgb(206,111,30)" fg:x="3692" fg:w="2"/><text x="100.1959%" y="159.50"></text></g><g><title>redirs`std::sys::pal::unix::thread::Thread::new (2 samples, 0.05%)</title><rect x="99.9459%" y="133" width="0.0541%" height="15" fill="rgb(243,70,54)" fg:x="3692" fg:w="2"/><text x="100.1959%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (2 samples, 0.05%)</title><rect x="99.9459%" y="117" width="0.0541%" height="15" fill="rgb(242,28,8)" fg:x="3692" fg:w="2"/><text x="100.1959%" y="127.50"></text></g></svg></svg>